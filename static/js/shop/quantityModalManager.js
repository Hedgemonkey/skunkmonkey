import{A as s}from"../common/apiClient.js";import"../chunks/ajax_helper.EulIYOr7.js";import"../chunks/chunks/vendor/common.Dz0GDR6V.js";class r{constructor(){this.api=new s,this.modal=document.getElementById("quantityModal"),this.modalInstance=null,this.currentProduct=null,this.modal&&(this.initModal(),this.initEventListeners())}initModal(){typeof bootstrap<"u"&&(this.modalInstance=new bootstrap.Modal(this.modal))}initEventListeners(){document.addEventListener("click",i=>{i.target.matches(".add-to-cart-modal-btn:not([disabled])")&&(i.preventDefault(),this.showQuantityModal(i.target))});const t=document.getElementById("modal-decrease-quantity"),e=document.getElementById("modal-increase-quantity"),a=document.getElementById("modal-quantity"),n=document.getElementById("confirm-add-to-cart");t&&t.addEventListener("click",()=>this.adjustQuantity(-1)),e&&e.addEventListener("click",()=>this.adjustQuantity(1)),a&&a.addEventListener("change",()=>this.validateQuantity()),n&&n.addEventListener("click",()=>this.confirmAddToCart())}showQuantityModal(t){this.currentProduct={id:t.dataset.productId,name:t.dataset.productName,price:t.dataset.productPrice,image:t.dataset.productImage,stockQuantity:parseInt(t.dataset.stockQuantity),cartAddUrl:t.dataset.cartAddUrl},this.populateModal(),this.modalInstance&&this.modalInstance.show()}populateModal(){if(!this.currentProduct)return;document.getElementById("modal-product-image").src=this.currentProduct.image,document.getElementById("modal-product-image").alt=this.currentProduct.name,document.getElementById("modal-product-name").textContent=this.currentProduct.name,document.getElementById("modal-product-price").textContent=`Â£${this.currentProduct.price}`,document.getElementById("modal-product-id").value=this.currentProduct.id;const t=document.getElementById("modal-stock-info");this.currentProduct.stockQuantity>10?t.innerHTML=`<span class="badge bg-success">${this.currentProduct.stockQuantity} available</span>`:this.currentProduct.stockQuantity>0?t.innerHTML=`<span class="badge bg-warning text-dark">Only ${this.currentProduct.stockQuantity} left!</span>`:t.innerHTML='<span class="badge bg-danger">Out of stock</span>';const e=document.getElementById("modal-quantity");e.value=1,e.max=this.currentProduct.stockQuantity,e.min=1}adjustQuantity(t){const e=document.getElementById("modal-quantity"),n=(parseInt(e.value)||1)+t;n>=1&&n<=this.currentProduct.stockQuantity&&(e.value=n)}validateQuantity(){const t=document.getElementById("modal-quantity");let e=parseInt(t.value)||1;e<1?e=1:e>this.currentProduct.stockQuantity&&(e=this.currentProduct.stockQuantity,this.showMessage("Maximum quantity available: "+this.currentProduct.stockQuantity,"warning")),t.value=e}async confirmAddToCart(){if(!this.currentProduct)return;const t=parseInt(document.getElementById("modal-quantity").value),e=document.getElementById("confirm-add-to-cart");e.disabled=!0;const a=e.innerHTML;e.innerHTML='<i class="fas fa-spinner fa-spin me-1"></i>Adding...';try{const n=new FormData;n.append("quantity",t),n.append("update","False");const i=document.querySelector("[name=csrfmiddlewaretoken]").value;n.append("csrfmiddlewaretoken",i);const o=await this.api.post(this.currentProduct.cartAddUrl,n);o.success?(this.modalInstance&&this.modalInstance.hide(),this.updateCartCount(o.item_count),this.showCartSummaryToast(o)):this.showMessage(o.errors||"Failed to add product to cart","error")}catch(n){console.error("Error adding to cart:",n),this.showMessage("An error occurred. Please try again.","error")}finally{e.disabled=!1,e.innerHTML=a}}updateCartCount(t){document.querySelectorAll(".cart-count-badge, #cart-count").forEach(a=>{a.textContent=t,t>0&&(a.classList.remove("d-none"),a.classList.add("cart-count-updated"),setTimeout(()=>{a.classList.remove("cart-count-updated")},500))})}showCartSummaryToast(t){let e="";t.cart_items&&t.cart_items.length>0&&(e=t.cart_items.map(a=>`<div class="d-flex justify-content-between align-items-center mb-1">
                    <span class="text-truncate me-2">${a.name} Ã— ${a.quantity}</span>
                    <span class="text-muted">Â£${a.total_price}</span>
                </div>`).join(""),t.total_unique_items>t.cart_items.length&&(e+=`<div class="text-muted small">... and ${t.total_unique_items-t.cart_items.length} more items</div>`)),typeof Swal<"u"?Swal.fire({title:"ðŸ›’ Added to Cart!",html:`
                    <div class="text-start">
                        <p class="mb-3"><strong>${t.quantity_added} Ã— ${t.product_name}</strong> added to your cart</p>
                        <hr>
                        <h6>Cart Summary (${t.item_count} items)</h6>
                        <div class="mb-3">${e}</div>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total:</span>
                            <span>Â£${t.cart_total}</span>
                        </div>
                    </div>
                `,icon:"success",showCancelButton:!0,confirmButtonText:'<i class="fas fa-credit-card me-1"></i> Go to Checkout',cancelButtonText:'<i class="fas fa-shopping-bag me-1"></i> Continue Shopping',reverseButtons:!0,customClass:{confirmButton:"btn btn-primary me-2",cancelButton:"btn btn-outline-secondary"},buttonsStyling:!1}).then(a=>{a.isConfirmed&&(window.location.href="/shop/cart/")}):this.showMessage(`${t.product_name} added to cart! Total: Â£${t.cart_total} (${t.item_count} items)`,"success")}showMessage(t,e="info"){typeof Swal<"u"?Swal.fire({text:t,icon:e==="error"?"error":e==="warning"?"warning":"info",timer:3e3,showConfirmButton:!1,toast:!0,position:"top-end"}):(console.log(`${e.toUpperCase()}: ${t}`),alert(t))}}document.addEventListener("DOMContentLoaded",()=>{window.quantityModalManager=new r});
