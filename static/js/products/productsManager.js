import{m as i}from"../chunks/ajax_helper.EulIYOr7.js";import{I as c}from"./filters.js";import{B as l}from"./baseManager.js";import{S as a,$ as s}from"../chunks/chunks/vendor/common.Dz0GDR6V.js";import"../common/apiClient.js";import"./notifications.js";import"./formUtils.js";import"./categoryFilterManager.js";import"./arrayUtils.js";import"./filterUiManager.js";class w extends l{constructor(r){super({...r,itemType:"product"})}fetchItems(){const r=localStorage.getItem("selectedCategories"),e=r?JSON.parse(r).join(","):"",t={};e&&(t.category=e),i(this.urls.getProductCards,"GET",t,o=>{o.html?this.elements.productListContainer.html(o.html):this.elements.productListContainer.html(o),this.attachDeleteListeners(),this.initializeFilters()},o=>{console.error("Error fetching products:",o),this.notifications.displayError("Failed to refresh product list.")})}showForm(r,e=!1){super.showForm(r,e,{title:e?"Edit Product":"Add New Product",confirmText:e?"Save":"Add Product",successMessage:e?"Product updated successfully.":"Product added successfully."})}delete(r){const e=`${this.urls.productBase}${r}/delete/`;try{const t=i(e,"POST");return!t||typeof t.then!="function"?Promise.reject("Invalid AJAX response"):t}catch(t){return Promise.reject(t)}}handleDelete(r,e){this.confirmAction({title:`Delete ${e}?`,text:"Are you sure you want to delete this product? This action cannot be undone.",preConfirm:()=>(a.showLoading(),this.delete(r).then(t=>(this.notifications.displaySuccess((t==null?void 0:t.message)||"Product deleted successfully."),this.fetchItems(),Promise.resolve())).catch(t=>{var o;return a.hideLoading(),(o=t.responseJSON)!=null&&o.error?this.notifications.displaySwalError(t,t.responseJSON.error):this.notifications.displaySwalError(t,"Failed to delete product. Please try again."),Promise.reject(t)}))})}initializeFilters(){this.filter=new c({containerId:"product-cards-container",filterUrl:this.urls.getProductCards,filterOnCategorySelect:!0,filterOnSearch:!0,filterOnSort:!0,filterOnSearchInput:!0,filterOnSortSelect:!0,onUpdate:()=>{this.attachDeleteListeners()}})}attachDeleteListeners(){s(".delete-product").off("click").on("click",r=>{r.preventDefault();const e=s(r.currentTarget);this.handleDelete(e.data("product-slug"),e.data("product-name"))})}destroy(){s(".delete-product").off("click"),super.destroy(),console.log("ProductManager destroyed")}}export{w as P};
