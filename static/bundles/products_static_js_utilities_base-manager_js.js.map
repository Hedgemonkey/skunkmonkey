{"version":3,"file":"products_static_js_utilities_base-manager_js.js","mappings":"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","sources":["webpack://skunkmonkey/./products/static/js/utilities/base-manager.js"],"sourcesContent":["/**\n * base-manager.js - Base class for item managers\n * \n * Provides common functionality for different item type managers\n * (products, categories, etc.) to reduce code duplication.\n */\nimport { makeAjaxRequest } from '../../../../static/js/ajax_helper.js';\nimport Swal from 'sweetalert2';\n\n/**\n * BaseManager - Abstract base class for item managers\n */\nexport class BaseManager {\n    /**\n     * Create a new BaseManager instance\n     * @param {Object} options - Configuration options\n     * @param {Object} options.elements - DOM element references\n     * @param {Object} options.urls - URL references\n     * @param {Object} options.notifications - Notification handlers\n     * @param {string} options.itemType - Type of item being managed ('product', 'category', etc.)\n     */\n    constructor(options) {\n        // Prevent direct instantiation of base class\n        if (new.target === BaseManager) {\n            throw new Error('Cannot instantiate BaseManager directly; please use a subclass');\n        }\n        \n        this.elements = options.elements;\n        this.urls = options.urls;\n        this.notifications = options.notifications;\n        this.itemType = options.itemType || 'item';\n        this.filter = null;\n    }\n\n    /**\n     * Fetch items via AJAX\n     * Must be implemented by subclasses\n     */\n    fetchItems() {\n        throw new Error('fetchItems() must be implemented by subclass');\n    }\n\n    /**\n     * Initialize filters for view\n     * Must be implemented by subclasses\n     */\n    initializeFilters() {\n        throw new Error('initializeFilters() must be implemented by subclass');\n    }\n\n    /**\n     * Show item add/edit form\n     * @param {string} url - URL to fetch the form\n     * @param {boolean} isEdit - Whether this is an edit operation\n     * @param {Object} options - Additional options\n     */\n    showForm(url, isEdit = false, options = {}) {\n        const itemTypeCapitalized = this.capitalizeFirstLetter(this.itemType);\n        const formId = isEdit ? `#${this.itemType}-update-form` : `#${this.itemType}-form`;\n        \n        const title = options.title || (isEdit ? `Edit ${itemTypeCapitalized}` : `Add New ${itemTypeCapitalized}`);\n        const confirmText = options.confirmText || (isEdit ? 'Save' : `Add ${itemTypeCapitalized}`);\n        const successMessage = options.successMessage || \n            (isEdit ? `${itemTypeCapitalized} updated successfully.` : `${itemTypeCapitalized} added successfully.`);\n        \n        makeAjaxRequest(\n            url,\n            'GET',\n            {},\n            (response) => {\n                Swal.fire({\n                    title: title,\n                    html: isEdit ? response.html : response,\n                    showCancelButton: true,\n                    confirmButtonText: confirmText,\n                    allowOutsideClick: false,\n                    allowEscapeKey: false,\n                    preConfirm: () => this.handleFormSubmit(isEdit, formId)\n                }).then((result) => {\n                    if (result.isConfirmed) {\n                        this.fetchItems();\n                        this.notifications.displaySuccess(result.value?.message || successMessage);\n                    }\n                    if (result.isDismissed && !isEdit) {\n                        $(formId).remove();\n                    }\n                }).catch(error => {\n                    console.error('Form submission failed:', error);\n                    Swal.hideLoading();\n                });\n            },\n            (error) => {\n                this.notifications.displaySwalError(error, `Failed to ${isEdit ? 'edit' : 'add'} ${this.itemType}.`);\n            }\n        );\n    }\n    \n    /**\n     * Handle form submission for add/edit item\n     * @param {boolean} isEdit - Whether this is an edit operation\n     * @param {string} formSelector - Selector for the form\n     * @returns {Promise} - Promise resolving with response data\n     */\n    handleFormSubmit(isEdit, formSelector) {\n        Swal.showLoading();\n        const form = $(formSelector)[0];\n        const formData = new FormData(form);\n        \n        return makeAjaxRequest(\n            form.action,\n            'POST',\n            formData,\n            (response) => {\n                if (!response.success) {\n                    let errorMessage = this.formatErrorMessage(response.errors);\n                    Swal.hideLoading();\n                    Swal.showValidationMessage(errorMessage);\n                    return Promise.reject(response.errors);\n                }\n                return response;\n            },\n            (error) => {\n                console.error(`${this.capitalizeFirstLetter(this.itemType)} form submission error:`, error);\n                let errorMessage = `An error occurred while saving the ${this.itemType}.`;\n\n                if (error.responseJSON) {\n                    errorMessage = this.formatErrorMessage(error.responseJSON.errors);\n                }\n\n                Swal.hideLoading();\n                Swal.showValidationMessage(errorMessage);\n                return Promise.reject(error);\n            },\n            false,\n            false\n        );\n    }\n    \n    /**\n     * Format error messages for display\n     * @param {Object|string} errors - Error data\n     * @returns {string} - Formatted error message\n     */\n    formatErrorMessage(errors) {\n        if (!errors) return 'Unknown error occurred';\n        \n        if (typeof errors === 'object') {\n            return Object.entries(errors)\n                .map(([field, fieldErrors]) => {\n                    if (Array.isArray(fieldErrors)) {\n                        return `${field}: ${fieldErrors.join(', ')}`;\n                    }\n                    return `${field}: ${fieldErrors}`;\n                })\n                .join('\\n');\n        }\n        \n        return errors;\n    }\n\n    /**\n     * Show a confirmation dialog\n     * @param {Object} options - Configuration for the dialog\n     * @returns {Promise} - Promise resolving when confirmed\n     */\n    confirmAction(options) {\n        const defaults = {\n            icon: 'warning',\n            showCancelButton: true,\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6',\n            confirmButtonText: 'Yes, delete it!'\n        };\n        \n        return Swal.fire({...defaults, ...options});\n    }\n    \n    /**\n     * Helper to capitalize first letter of a string\n     * @param {string} string - String to capitalize\n     * @returns {string} - Capitalized string\n     */\n    capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    \n    /**\n     * Clean up resources\n     * Should be called when manager is no longer needed\n     */\n    destroy() {\n        // Clean up filter if it exists\n        if (this.filter && typeof this.filter.destroy === 'function') {\n            this.filter.destroy();\n        }\n        \n        // Subclasses should override this to clean up their specific resources\n        console.log(`Base ${this.itemType} manager destroyed`);\n    }\n}\n\nexport default BaseManager;\n"],"names":["makeAjaxRequest","Swal","BaseManager","options","_classCallCheck","constructor","Error","elements","urls","notifications","itemType","filter","_createClass","key","value","fetchItems","initializeFilters","showForm","url","_this","isEdit","arguments","length","undefined","itemTypeCapitalized","capitalizeFirstLetter","formId","concat","title","confirmText","successMessage","response","fire","html","showCancelButton","confirmButtonText","allowOutsideClick","allowEscapeKey","preConfirm","handleFormSubmit","then","result","isConfirmed","_result$value","displaySuccess","message","isDismissed","$","remove","error","console","hideLoading","displaySwalError","formSelector","_this2","showLoading","form","formData","FormData","action","success","errorMessage","formatErrorMessage","errors","showValidationMessage","Promise","reject","responseJSON","_typeof","Object","entries","map","_ref","_ref2","_slicedToArray","field","fieldErrors","Array","isArray","join","confirmAction","defaults","icon","confirmButtonColor","cancelButtonColor","_objectSpread","string","charAt","toUpperCase","slice","destroy","log"],"sourceRoot":""}