{"version":3,"file":"js/profile.js","mappings":"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","sources":["webpack://skunkmonkey/./users/static/users/js/profile.js"],"sourcesContent":["// /users/static/users/js/profile.js\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    // --- Address Deletion ---\n    const deleteButtons = document.querySelectorAll('.btn-delete-address');\n    deleteButtons.forEach(button => {\n        button.addEventListener('click', function (e) {\n            e.preventDefault();\n            const addressId = this.dataset.addressId;\n            const addressInfo = this.dataset.addressInfo || 'this address'; // Fallback text\n            const url = window.deleteAddressUrlTemplate.replace('{address_id}', addressId);\n            const csrfToken = window.csrfToken; // Assumes csrfToken is globally available\n\n            if (!url || !csrfToken) {\n                console.error(\"Missing URL template or CSRF token for delete action.\");\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'Could not prepare delete request. Please refresh the page.',\n                });\n                return;\n            }\n\n            Swal.fire({\n                title: 'Are you sure?',\n                html: `Do you really want to delete the address:<br><strong>${addressInfo}</strong>?`, // Use html property\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#d33',\n                cancelButtonColor: '#6c757d',\n                confirmButtonText: 'Yes, delete it!'\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    fetch(url, {\n                        method: 'POST', // Matches require_POST in Django view\n                        headers: {\n                            'X-CSRFToken': csrfToken,\n                            'X-Requested-With': 'XMLHttpRequest', // Identify as AJAX\n                            'Content-Type': 'application/json' // Optional, depends on view\n                        },\n                        // body: JSON.stringify({}) // Optional body if needed\n                    })\n                    .then(response => {\n                        if (!response.ok) {\n                            // Try to get error message from JSON response if available\n                             return response.json().then(err => { throw new Error(err.message || `HTTP error! status: ${response.status}`) });\n                        }\n                        return response.json();\n                    })\n                    .then(data => {\n                        if (data.success) {\n                            Swal.fire(\n                                'Deleted!',\n                                data.message || 'Your address has been deleted.',\n                                'success'\n                            ).then(() => {\n                                // Option 1: Remove the card directly\n                                const cardToRemove = button.closest('.col-md-6');\n                                if (cardToRemove) {\n                                    cardToRemove.remove();\n                                    // Optionally check if any addresses remain and show a message\n                                    if (document.querySelectorAll('.btn-delete-address').length === 0) {\n                                        const container = document.querySelector('.address-list-container'); // Add this class to the container in HTML\n                                        if (container) container.innerHTML = '<p>You haven\\'t saved any addresses yet.</p>';\n                                    }\n                                } else {\n                                     // Option 2: Reload the page if direct removal is complex\n                                     window.location.reload();\n                                }\n                            });\n                        } else {\n                            throw new Error(data.message || 'Failed to delete address.');\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error deleting address:', error);\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Deletion Failed',\n                            text: error.message || 'Something went wrong while deleting the address.',\n                        });\n                    });\n                }\n            });\n        });\n    });\n\n    // --- Set Default Address ---\n    const setDefaultButtons = document.querySelectorAll('.btn-set-default');\n    setDefaultButtons.forEach(button => {\n         button.addEventListener('click', function(e) {\n            e.preventDefault();\n            const addressId = this.dataset.addressId;\n            const addressInfo = this.dataset.addressInfo || 'this address';\n            const url = window.setDefaultAddressUrlTemplate.replace('{address_id}', addressId);\n            const csrfToken = window.csrfToken;\n\n             if (!url || !csrfToken) {\n                console.error(\"Missing URL template or CSRF token for set default action.\");\n                Swal.fire('Error', 'Could not prepare request.', 'error');\n                return;\n            }\n\n            // Optional: Add a loading state to the button\n            button.disabled = true;\n            button.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Setting...';\n\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': csrfToken,\n                    'X-Requested-With': 'XMLHttpRequest',\n                },\n            })\n            .then(response => {\n                 if (!response.ok) {\n                     return response.json().then(err => { throw new Error(err.message || `HTTP error! status: ${response.status}`) });\n                 }\n                 return response.json();\n             })\n             .then(data => {\n                 if (data.success) {\n                     Swal.fire({\n                         icon: 'success',\n                         title: 'Success!',\n                         text: data.message || 'Address set as default.',\n                         timer: 1500, // Auto close timer\n                         showConfirmButton: false\n                     }).then(() => {\n                         window.location.reload(); // Easiest way to update UI state (default badge, buttons)\n                     });\n                 } else {\n                      throw new Error(data.message || 'Failed to set default address.');\n                 }\n             })\n             .catch(error => {\n                 console.error('Error setting default address:', error);\n                 Swal.fire('Error', error.message || 'Could not set address as default.', 'error');\n                 // Restore button state on error\n                 button.disabled = false;\n                 button.innerHTML = 'Set as Default';\n             });\n         });\n    });\n\n}); // End DOMContentLoaded"],"names":["document","addEventListener","deleteButtons","querySelectorAll","forEach","button","e","preventDefault","addressId","dataset","addressInfo","url","window","deleteAddressUrlTemplate","replace","csrfToken","console","error","Swal","fire","icon","title","text","html","concat","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","fetch","method","headers","response","ok","json","err","Error","message","status","data","success","cardToRemove","closest","remove","length","container","querySelector","innerHTML","location","reload","setDefaultButtons","setDefaultAddressUrlTemplate","disabled","timer","showConfirmButton"],"sourceRoot":""}