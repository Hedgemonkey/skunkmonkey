{"version":3,"file":"js/shop/product-detail.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AAHA,IAIMA,oBAAoB;EACtB,SAAAA,qBAAA,EAAc;IAAAC,eAAA,OAAAD,oBAAA;IACV,IAAI,CAACE,oBAAoB,CAAC,CAAC;EAC/B;;EAEA;AACJ;AACA;AACA;EAHI,OAAAC,YAAA,CAAAH,oBAAA;IAAAI,GAAA;IAAAC,KAAA,EAIA,SAAAH,oBAAoBA,CAAA,EAAG;MACnB,IAAMI,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MACzD,IAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;MAChE,IAAME,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;MAEhE,IAAIC,WAAW,IAAIC,WAAW,IAAIJ,aAAa,EAAE;QAC7CG,WAAW,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAM;UACxC,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAa,CAACD,KAAK,CAAC;UAClD,IAAIO,YAAY,GAAG,CAAC,EAAE;YAClBN,aAAa,CAACD,KAAK,GAAGO,YAAY,GAAG,CAAC;UAC1C;QACJ,CAAC,CAAC;QAEFF,WAAW,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAM;UACxC,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAa,CAACD,KAAK,CAAC;UAClD,IAAMS,QAAQ,GAAGD,QAAQ,CAACP,aAAa,CAACS,YAAY,CAAC,KAAK,CAAC,CAAC;UAC5D,IAAIH,YAAY,GAAGE,QAAQ,EAAE;YACzBR,aAAa,CAACD,KAAK,GAAGO,YAAY,GAAG,CAAC;UAC1C,CAAC,MAAM;YACH;YACA;YACAI,IAAI,CAACC,IAAI,CAAC;cACNC,KAAK,EAAE,kBAAkB;cACzBC,IAAI,iBAAAC,MAAA,CAAiBN,QAAQ,sBAAmB;cAChDO,IAAI,EAAE,MAAM;cACZC,kBAAkB,EAAE;YACxB,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;MACN;IACJ;EAAC;AAAA,KAGL;AACAf,QAAQ,CAACI,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACrD;EACA;EACA;;EAEA;EACAY,MAAM,CAACC,oBAAoB,GAAG,IAAIxB,oBAAoB,CAAC,CAAC;AAC5D,CAAC,CAAC,C","sources":["webpack://skunkmonkey/./shop/static/js/shop/product-detail-manager.js"],"sourcesContent":["/**\n * ProductDetailManager - handles product detail page functionality\n * Manages quantity selectors and integrates with cart and wishlist\n */\nclass ProductDetailManager {\n    constructor() {\n        this.initQuantityControls();\n    }\n    \n    /**\n     * Initialize quantity controls for the product detail page\n     * Sets up increment/decrement buttons with validation\n     */\n    initQuantityControls() {\n        const quantityInput = document.getElementById('quantity');\n        const decreaseBtn = document.getElementById('decrease-quantity');\n        const increaseBtn = document.getElementById('increase-quantity');\n        \n        if (decreaseBtn && increaseBtn && quantityInput) {\n            decreaseBtn.addEventListener('click', () => {\n                const currentValue = parseInt(quantityInput.value);\n                if (currentValue > 1) {\n                    quantityInput.value = currentValue - 1;\n                }\n            });\n            \n            increaseBtn.addEventListener('click', () => {\n                const currentValue = parseInt(quantityInput.value);\n                const maxValue = parseInt(quantityInput.getAttribute('max'));\n                if (currentValue < maxValue) {\n                    quantityInput.value = currentValue + 1;\n                } else {\n                    // Use SweetAlert2 directly\n                    // Always use SweetAlert2\n                    Swal.fire({\n                        title: 'Maximum Quantity',\n                        text: `Sorry, only ${maxValue} units available.`,\n                        icon: 'info',\n                        confirmButtonColor: '#0d6efd'\n                    });\n                }\n            });\n        }\n    }\n}\n\n// Initialize the product detail manager when the DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    // No need to create new instances of cart and wishlist managers\n    // They've already been initialized by their respective scripts\n    // and are available as global variables\n    \n    // Create our product detail manager\n    window.productDetailManager = new ProductDetailManager();\n});\n"],"names":["ProductDetailManager","_classCallCheck","initQuantityControls","_createClass","key","value","quantityInput","document","getElementById","decreaseBtn","increaseBtn","addEventListener","currentValue","parseInt","maxValue","getAttribute","Swal","fire","title","text","concat","icon","confirmButtonColor","window","productDetailManager"],"sourceRoot":""}