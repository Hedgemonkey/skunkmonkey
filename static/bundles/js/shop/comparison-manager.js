/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./shop/static/js/shop/comparison-manager.js":
/*!***************************************************!*\
  !*** ./shop/static/js/shop/comparison-manager.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../static/js/api-client.js */ \"./static/js/api-client.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Comparison Manager\n * Handles product comparison functionality\n * \n * This module provides functionality for managing product comparisons,\n * including adding and removing products from the comparison list,\n * updating the UI, and displaying notifications.\n */\n\n\n\n/**\n * ComparisonManager class for handling product comparison functionality\n */\nvar ComparisonManager = /*#__PURE__*/function () {\n  /**\n   * Initialize the ComparisonManager\n   */\n  function ComparisonManager() {\n    _classCallCheck(this, ComparisonManager);\n    this.initialize();\n  }\n\n  /**\n   * Initialize the comparison manager with error handling\n   */\n  return _createClass(ComparisonManager, [{\n    key: \"initialize\",\n    value: function initialize() {\n      try {\n        this.bindEvents();\n        this.updateComparisonCount();\n      } catch (error) {\n        console.error('Error initializing Comparison Manager:', error);\n      }\n    }\n\n    /**\n     * Bind event listeners to DOM elements\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this = this;\n      // Add to comparison buttons\n      document.addEventListener('click', function (event) {\n        var compareBtn = event.target.closest('.add-to-comparison-btn');\n        if (compareBtn) {\n          event.preventDefault();\n          _this.handleAddToComparison(compareBtn);\n        }\n      });\n\n      // Remove from comparison buttons\n      document.addEventListener('click', function (event) {\n        var removeBtn = event.target.closest('.remove-from-comparison');\n        if (removeBtn) {\n          event.preventDefault();\n          _this.handleRemoveFromComparison(removeBtn);\n        }\n      });\n    }\n\n    /**\n     * Handle adding a product to the comparison list\n     * @param {HTMLElement} button - The button that was clicked\n     */\n  }, {\n    key: \"handleAddToComparison\",\n    value: function handleAddToComparison(button) {\n      var _this2 = this;\n      var productId = button.dataset.productId;\n      var productName = button.dataset.productName || 'Product';\n      var url = button.href;\n      var isCurrentlyCompared = button.classList.contains('btn-success');\n\n      // Update button state immediately for better UX\n      this.updateButtonState(button, !isCurrentlyCompared);\n\n      // Make API request\n      _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url).then(function (data) {\n        if (data.success) {\n          // Show appropriate success message based on action\n          if (isCurrentlyCompared) {\n            // If removing from comparison\n            _this2.showToast('Removed from Comparison', data.message || \"\".concat(productName, \" removed from comparison list.\"), 'info');\n          } else {\n            // If adding to comparison\n            _this2.showToast('Added to Comparison', data.message || \"\".concat(productName, \" added to comparison list.\"), 'success');\n          }\n          _this2.updateComparisonCount(data.comparison_count);\n        } else {\n          // Revert button state on failure\n          _this2.updateButtonState(button, isCurrentlyCompared);\n\n          // Show error message\n          _this2.showToast('Notice', data.message || 'Failed to update comparison list', 'warning');\n        }\n      })[\"catch\"](function (error) {\n        // Revert button state on error\n        _this2.updateButtonState(button, isCurrentlyCompared);\n\n        // Show error message\n        console.error('Error updating comparison:', error);\n        _this2.showToast('Error', 'Failed to update comparison list', 'error');\n      });\n    }\n\n    /**\n     * Update the button state based on comparison status\n     * @param {HTMLElement} button - The button to update\n     * @param {boolean} isCompared - Whether the product is in the comparison list\n     */\n  }, {\n    key: \"updateButtonState\",\n    value: function updateButtonState(button, isCompared) {\n      if (isCompared) {\n        // Add to comparison list styling\n        button.classList.remove('btn-outline-secondary');\n        button.classList.add('btn-success');\n        button.innerHTML = '<i class=\"fas fa-check me-1\"></i> Compared';\n        button.setAttribute('title', 'Remove from comparison');\n\n        // Update href to remove action\n        var newUrl = button.getAttribute('href').replace('add_to_comparison', 'remove_from_comparison');\n        button.setAttribute('href', newUrl);\n      } else {\n        // Remove from comparison list styling\n        button.classList.remove('btn-success');\n        button.classList.add('btn-outline-secondary');\n        button.innerHTML = '<i class=\"fas fa-balance-scale me-1\"></i> Compare';\n        button.setAttribute('title', 'Add to comparison');\n\n        // Update href to add action\n        var _newUrl = button.getAttribute('href').replace('remove_from_comparison', 'add_to_comparison');\n        button.setAttribute('href', _newUrl);\n      }\n    }\n\n    /**\n     * Handle removing a product from the comparison list\n     * @param {HTMLElement} button - The button that was clicked\n     */\n  }, {\n    key: \"handleRemoveFromComparison\",\n    value: function handleRemoveFromComparison(button) {\n      var _this3 = this;\n      var url = button.href;\n      var productName = button.dataset.productName || 'Product';\n\n      // Make API request\n      _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url).then(function (data) {\n        if (data.success) {\n          // If we're on the comparison page, reload to update the UI\n          if (window.location.pathname.includes('/comparison/')) {\n            window.location.reload();\n          } else {\n            // Just update the count\n            _this3.updateComparisonCount(data.comparison_count);\n            _this3.showToast('Removed from Comparison', data.message || \"\".concat(productName, \" removed from comparison list.\"), 'info');\n          }\n        } else {\n          // Show error message\n          _this3.showToast('Error', data.message || 'Failed to remove product', 'error');\n        }\n      })[\"catch\"](function (error) {\n        console.error('Error removing from comparison:', error);\n        _this3.showToast('Error', 'Failed to remove product from comparison', 'error');\n      });\n    }\n\n    /**\n     * Update the comparison count in the UI\n     * @param {number} count - The new comparison count\n     */\n  }, {\n    key: \"updateComparisonCount\",\n    value: function updateComparisonCount(count) {\n      // Update comparison count in the UI\n      var countElements = document.querySelectorAll('.comparison-count');\n      if (countElements.length > 0 && count !== undefined) {\n        countElements.forEach(function (el) {\n          el.textContent = count;\n        });\n      }\n    }\n\n    /**\n     * Show a notification using SweetAlert2\n     * @param {string} title - The notification title\n     * @param {string} message - The notification message\n     * @param {string} type - The notification type (success, error, warning, info)\n     */\n  }, {\n    key: \"showToast\",\n    value: function showToast(title, message) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';\n      // Convert type to SweetAlert2 icon type\n      var iconType = type === 'danger' ? 'error' : type;\n\n      // Use the globally available Swal object from the npm package\n      if (typeof window.Swal !== 'undefined') {\n        console.log('Showing toast with SweetAlert2:', title, message, iconType);\n        window.Swal.fire({\n          title: title,\n          text: message,\n          icon: iconType,\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: function didOpen(toast) {\n            toast.addEventListener('mouseenter', window.Swal.stopTimer);\n            toast.addEventListener('mouseleave', window.Swal.resumeTimer);\n          }\n        });\n      } else {\n        // Fallback to console if SweetAlert2 is not available\n        console.warn('SweetAlert2 not available for toast:', title, message);\n        alert(\"\".concat(title, \": \").concat(message));\n      }\n    }\n  }]);\n}(); // Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Check if SweetAlert2 is available\n  if (typeof window.Swal === 'undefined') {\n    console.warn('SweetAlert2 is not available. Toast notifications will fall back to alerts.');\n  } else {\n    console.log('SweetAlert2 is available for ComparisonManager.');\n  }\n  window.comparisonManager = new ComparisonManager();\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ComparisonManager);\n\n//# sourceURL=webpack://skunkmonkey/./shop/static/js/shop/comparison-manager.js?");

/***/ }),

/***/ "./static/js/ajax_helper.js":
/*!**********************************!*\
  !*** ./static/js/ajax_helper.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   makeAjaxRequest: () => (/* binding */ makeAjaxRequest)\n/* harmony export */ });\n/**\n * ajax_helper.js - Utility functions for AJAX requests\n * \n * Provides standardized AJAX request functionality with CSRF protection\n * and consistent error handling.\n */\n\n/**\n * Get the CSRF token from cookies\n * @param {string} name - Cookie name\n * @returns {string} - CSRF token value\n */\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n/**\n * Makes an AJAX request and returns the jqXHR object to allow aborting the request if needed\n * @param {string} url - The URL to send the request to\n * @param {string} method - The HTTP method to use (GET, POST, etc.)\n * @param {Object|FormData} data - The data to send with the request\n * @param {Function} successCallback - Called when the request succeeds\n * @param {Function} errorCallback - Called when the request fails\n * @param {boolean} abortable - Whether to return the jqXHR object for aborting (default: true)\n * @param {boolean} processData - Whether to process the data (set to false for FormData)\n * @param {string|boolean} contentType - Content type header or false to let jQuery set it\n * @returns {Object} The jqXHR object if abortable is true, otherwise undefined\n */\nfunction makeAjaxRequest(url, method, data, successCallback, errorCallback) {\n  var abortable = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var processData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  var contentType = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'application/x-www-form-urlencoded; charset=UTF-8';\n  // Determine if data is FormData and set appropriate options\n  var isFormData = data instanceof FormData;\n  if (isFormData) {\n    processData = false;\n    contentType = false;\n  }\n\n  // Set up AJAX options\n  var ajaxOptions = {\n    url: url,\n    method: method,\n    data: data,\n    processData: processData,\n    contentType: contentType,\n    headers: {\n      'X-CSRFToken': getCookie('csrftoken'),\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    success: function success(response) {\n      if (typeof successCallback === \"function\") {\n        // Handle both JSON and HTML responses\n        if (typeof response === 'string' && response.trim().startsWith('<')) {\n          // If it's HTML content\n          successCallback({\n            html: response\n          });\n        } else {\n          // If it's JSON or other data\n          successCallback(response);\n        }\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      // Don't log aborted requests as errors\n      if (textStatus !== 'abort') {\n        console.error(\"AJAX Request failed:\", textStatus, errorThrown);\n        if (typeof errorCallback === \"function\") {\n          errorCallback(jqXHR, textStatus, errorThrown);\n        }\n      }\n    }\n  };\n\n  // Try to auto-detect the response type\n  if (url.includes('/api/') || url.endsWith('.json')) {\n    ajaxOptions.dataType = 'json';\n  }\n\n  // Make the request\n  var ajaxRequest = $.ajax(ajaxOptions);\n\n  // Return the jqXHR object if the request should be abortable\n  if (abortable) {\n    return ajaxRequest;\n  }\n}\n\n//# sourceURL=webpack://skunkmonkey/./static/js/ajax_helper.js?");

/***/ }),

/***/ "./static/js/api-client.js":
/*!*********************************!*\
  !*** ./static/js/api-client.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: () => (/* binding */ ApiClient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax_helper.js */ \"./static/js/ajax_helper.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * api-client.js - Standardized API client for consistent AJAX operations\n * \n * Provides a higher-level wrapper around AJAX requests with standardized\n * error handling, response parsing, and consistent promise handling.\n */\n\n\n/**\n * API Client for consistent handling of AJAX requests\n */\nvar ApiClient = /*#__PURE__*/function () {\n  /**\n   * Create a new ApiClient instance\n   * @param {Object} options - Configuration options\n   * @param {Function} options.errorHandler - Global error handler function\n   * @param {string} options.baseUrl - Base URL for API requests\n   */\n  function ApiClient() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ApiClient);\n    this.errorHandler = options.errorHandler || console.error;\n    this.baseUrl = options.baseUrl || '';\n    this.csrfToken = (0,_ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken');\n    this.pendingRequests = [];\n  }\n\n  /**\n   * Builds a complete URL for the API request\n   * @param {string} endpoint - API endpoint\n   * @returns {string} - Complete URL\n   */\n  return _createClass(ApiClient, [{\n    key: \"buildUrl\",\n    value: function buildUrl(endpoint) {\n      // If endpoint is already a full URL, return it as is\n      if (endpoint.startsWith('http') || endpoint.startsWith('/')) {\n        return endpoint;\n      }\n\n      // Otherwise, join baseUrl and endpoint\n      return \"\".concat(this.baseUrl, \"/\").concat(endpoint).replace(/([^:]\\/)\\/+/g, '$1');\n    }\n\n    /**\n     * Make a GET request to fetch data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} params - Query parameters\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"get\",\n    value: function get(endpoint) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('GET', endpoint, params, options);\n    }\n\n    /**\n     * Make a POST request to create or update data\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"post\",\n    value: function post(endpoint) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('POST', endpoint, data, options);\n    }\n\n    /**\n     * Make a DELETE request to remove data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(endpoint) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('DELETE', endpoint, data, options);\n    }\n\n    /**\n     * Make a generic request with specified method\n     * @param {string} method - HTTP method\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"request\",\n    value: function request(method, endpoint) {\n      var _this = this;\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var url = this.buildUrl(endpoint);\n      var abortable = options.abortable !== false;\n\n      // Determine if we should process the data (false for FormData)\n      var processData = !(data instanceof FormData);\n      var contentType = processData ? 'application/x-www-form-urlencoded; charset=UTF-8' : false;\n      return new Promise(function (resolve, reject) {\n        try {\n          var ajaxRequest = (0,_ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__.makeAjaxRequest)(url, method, data, function (response) {\n            // Remove from pending requests\n            _this.removePendingRequest(ajaxRequest);\n            resolve(response);\n          }, function (jqXHR, textStatus, errorThrown) {\n            var _jqXHR$responseJSON;\n            // Remove from pending requests\n            _this.removePendingRequest(ajaxRequest);\n\n            // Create standardized error object\n            var error = {\n              status: jqXHR.status,\n              statusText: jqXHR.statusText,\n              responseJSON: jqXHR.responseJSON,\n              message: ((_jqXHR$responseJSON = jqXHR.responseJSON) === null || _jqXHR$responseJSON === void 0 ? void 0 : _jqXHR$responseJSON.error) || errorThrown || \"Request failed\"\n            };\n\n            // Call the global error handler if provided\n            if (_this.errorHandler && !options.skipGlobalErrorHandler) {\n              _this.errorHandler(error);\n            }\n            reject(error);\n          }, abortable, processData, contentType);\n\n          // Track the request if abortable\n          if (abortable && ajaxRequest) {\n            _this.pendingRequests.push(ajaxRequest);\n          }\n\n          // If there's a timeout option, handle it\n          if (options.timeout) {\n            setTimeout(function () {\n              if (ajaxRequest && ajaxRequest.readyState < 4) {\n                ajaxRequest.abort();\n                reject({\n                  message: 'Request timed out',\n                  status: 0,\n                  statusText: 'timeout'\n                });\n              }\n            }, options.timeout);\n          }\n        } catch (error) {\n          console.error(\"Error making request:\", error);\n          reject({\n            message: error.message || \"Failed to make request\",\n            error: error\n          });\n        }\n      });\n    }\n\n    /**\n     * Remove a request from the pending requests list\n     * @param {Object} request - The request to remove\n     */\n  }, {\n    key: \"removePendingRequest\",\n    value: function removePendingRequest(request) {\n      var index = this.pendingRequests.indexOf(request);\n      if (index !== -1) {\n        this.pendingRequests.splice(index, 1);\n      }\n    }\n\n    /**\n     * Abort all pending requests\n     */\n  }, {\n    key: \"abortAll\",\n    value: function abortAll() {\n      this.pendingRequests.forEach(function (request) {\n        if (request && typeof request.abort === 'function') {\n          request.abort();\n        }\n      });\n      this.pendingRequests = [];\n    }\n  }]);\n}();\n\n// Create a default instance\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ApiClient());\n\n//# sourceURL=webpack://skunkmonkey/./static/js/api-client.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./shop/static/js/shop/comparison-manager.js");
/******/ 	
/******/ })()
;