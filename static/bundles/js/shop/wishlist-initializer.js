/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./shop/static/js/shop/wishlist-initializer.js":
/*!*****************************************************!*\
  !*** ./shop/static/js/shop/wishlist-initializer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _wishlist_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wishlist-manager.js */ \"./shop/static/js/shop/wishlist-manager.js\");\n/**\n * Wishlist Entry Point\n * \n * This file serves as the entry point for the wishlist functionality.\n * It imports and initializes the WishlistManager.\n */\n\n\n\n// Create a global instance of the WishlistManager with default configuration\nvar wishlistManager = new _wishlist_manager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  debug: false,\n  confirmRemoval: true,\n  toastDuration: 3000\n});\n\n// Make the instance available globally\nwindow.wishlistManager = wishlistManager;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (wishlistManager);\n\n//# sourceURL=webpack://skunkmonkey/./shop/static/js/shop/wishlist-initializer.js?");

/***/ }),

/***/ "./shop/static/js/shop/wishlist-manager.js":
/*!*************************************************!*\
  !*** ./shop/static/js/shop/wishlist-manager.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../static/js/api-client.js */ \"./static/js/api-client.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Wishlist Manager\n * Handles wishlist functionality for the shop\n */\n\n\n\n/**\n * WishlistManager class for handling wishlist functionality\n */\nvar WishlistManager = /*#__PURE__*/function () {\n  /**\n   * Initialize the WishlistManager\n   */\n  function WishlistManager() {\n    _classCallCheck(this, WishlistManager);\n    this.initialize();\n    this.toastQueue = []; // Queue for storing toast notifications\n    this.processingToast = false; // Flag to track if a toast is currently being processed\n    this.debug = true; // Enable debug logging\n  }\n\n  /**\n   * Initialize the wishlist manager with error handling\n   */\n  return _createClass(WishlistManager, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var _this = this;\n      try {\n        this.initEventListeners();\n        this.checkSweetAlert2Availability();\n\n        // Process any queued toasts once SweetAlert2 is available\n        document.addEventListener('swal2-initialized', function () {\n          _this.log('SweetAlert2 initialized event received, processing queued toasts');\n          _this.processToastQueue();\n        });\n      } catch (error) {\n        console.error('Error initializing Wishlist Manager:', error);\n      }\n    }\n\n    /**\n     * Log debug messages if debug mode is enabled\n     * @param {...any} args - Arguments to log\n     */\n  }, {\n    key: \"log\",\n    value: function log() {\n      if (this.debug) {\n        var _console;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        (_console = console).log.apply(_console, ['[WishlistManager]'].concat(args));\n      }\n    }\n\n    /**\n     * Check if SweetAlert2 is available and log the result\n     */\n  }, {\n    key: \"checkSweetAlert2Availability\",\n    value: function checkSweetAlert2Availability() {\n      var _this2 = this;\n      if (typeof window.Swal !== 'undefined') {\n        this.log('SweetAlert2 is available for WishlistManager.');\n        // Dispatch an event to signal SweetAlert2 is available\n        document.dispatchEvent(new Event('swal2-initialized'));\n      } else {\n        console.warn('SweetAlert2 is not available for WishlistManager. Toast notifications will fall back to alerts.');\n        // Set up a listener to check again when main.js might have loaded SweetAlert2\n        window.addEventListener('load', function () {\n          setTimeout(function () {\n            if (typeof window.Swal !== 'undefined') {\n              _this2.log('SweetAlert2 became available after window load');\n              document.dispatchEvent(new Event('swal2-initialized'));\n            }\n          }, 500);\n        });\n      }\n    }\n\n    /**\n     * Initialize event listeners for wishlist buttons\n     */\n  }, {\n    key: \"initEventListeners\",\n    value: function initEventListeners() {\n      var _this3 = this;\n      // Add to wishlist buttons\n      document.addEventListener('click', function (event) {\n        var addBtn = event.target.closest('.add-to-wishlist-btn');\n        if (addBtn && !addBtn.hasAttribute('data-event-bound')) {\n          addBtn.setAttribute('data-event-bound', 'true');\n          addBtn.addEventListener('click', function (e) {\n            e.preventDefault();\n            _this3.handleAddToWishlist(e);\n          });\n        }\n      });\n\n      // Remove from wishlist buttons - Enhanced with direct selector for more reliability\n      document.addEventListener('click', function (event) {\n        var removeBtn = event.target.closest('.remove-wishlist-btn');\n        if (removeBtn && !removeBtn.hasAttribute('data-event-bound')) {\n          _this3.log('Binding event to remove button:', removeBtn);\n          removeBtn.setAttribute('data-event-bound', 'true');\n          removeBtn.addEventListener('click', function (e) {\n            e.preventDefault();\n            _this3.handleRemoveFromWishlist(e);\n          });\n        }\n      });\n\n      // Add a mutation observer to handle dynamically added buttons\n      this.setupMutationObserver();\n      this.log('Wishlist event listeners initialized');\n    }\n\n    /**\n     * Setup mutation observer to watch for dynamically added buttons\n     */\n  }, {\n    key: \"setupMutationObserver\",\n    value: function setupMutationObserver() {\n      var _this4 = this;\n      // Create an observer instance\n      var observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n          if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n            // Check each added node for wishlist buttons\n            mutation.addedNodes.forEach(function (node) {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                // Look for add buttons\n                var addBtns = node.querySelectorAll('.add-to-wishlist-btn:not([data-event-bound])');\n                addBtns.forEach(function (btn) {\n                  btn.setAttribute('data-event-bound', 'true');\n                  btn.addEventListener('click', function (e) {\n                    e.preventDefault();\n                    _this4.handleAddToWishlist(e);\n                  });\n                });\n\n                // Look for remove buttons\n                var removeBtns = node.querySelectorAll('.remove-wishlist-btn:not([data-event-bound])');\n                removeBtns.forEach(function (btn) {\n                  btn.setAttribute('data-event-bound', 'true');\n                  btn.addEventListener('click', function (e) {\n                    e.preventDefault();\n                    _this4.handleRemoveFromWishlist(e);\n                  });\n                });\n              }\n            });\n          }\n        });\n      });\n\n      // Start observing\n      observer.observe(document.body, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * Handle adding a product to the wishlist\n     * @param {Event} event - The click event\n     */\n  }, {\n    key: \"handleAddToWishlist\",\n    value: function handleAddToWishlist(event) {\n      var _this5 = this;\n      var button = event.currentTarget;\n      var url = button.getAttribute('href');\n      var productId = button.dataset.productId;\n      var productName = button.dataset.productName || 'Product';\n      this.log('Adding product to wishlist:', productId, productName);\n\n      // Add active state for visual feedback\n      button.classList.add('wishlist-btn-active');\n\n      // Show loading state\n      var originalContent = button.innerHTML;\n      button.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>';\n      button.classList.add('disabled');\n\n      // Make API request using GET method to match server expectations\n      _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url).then(function (response) {\n        // Ensure the response is properly parsed as JSON\n        var data;\n        try {\n          // If the response is already an object, use it directly\n          if (_typeof(response) === 'object' && response !== null) {\n            data = response;\n          }\n          // If it's a string, try to parse it as JSON\n          else if (typeof response === 'string') {\n            data = JSON.parse(response);\n          }\n          // If neither, throw an error\n          else {\n            throw new Error('Response is not a valid JSON object or string');\n          }\n        } catch (error) {\n          console.error('Error parsing response:', error, response);\n          throw new Error('Failed to parse server response');\n        }\n\n        // Log the response for debugging\n        _this5.log('Wishlist add response:', data);\n\n        // Remove loading state\n        button.innerHTML = originalContent;\n        button.classList.remove('disabled');\n        button.classList.remove('wishlist-btn-active');\n        if (data.success) {\n          // Update button state\n          _this5.updateWishlistButtonState(button, true);\n\n          // Show success message\n          _this5.showToast('Added to Wishlist', data.message || \"\".concat(productName, \" added to your wishlist.\"), 'success');\n\n          // Update wishlist count if available\n          _this5.updateWishlistCount(data.wishlist_count);\n        } else {\n          // Show error message\n          _this5.showToast('Error', data.error || 'Failed to add product to wishlist.', 'error');\n        }\n      })[\"catch\"](function (error) {\n        // Log the error for debugging\n        console.error('Error adding to wishlist:', error);\n\n        // Remove loading state\n        button.innerHTML = originalContent;\n        button.classList.remove('disabled');\n        button.classList.remove('wishlist-btn-active');\n        _this5.showToast('Error', 'Failed to add product to wishlist.', 'error');\n      });\n    }\n\n    /**\n     * Handle removing a product from the wishlist\n     * @param {Event} event - The click event\n     */\n  }, {\n    key: \"handleRemoveFromWishlist\",\n    value: function handleRemoveFromWishlist(event) {\n      var _this6 = this;\n      var button = event.currentTarget;\n      var url = button.getAttribute('href');\n      var productId = button.dataset.productId;\n      var productName = button.dataset.productName || 'Product';\n      this.log('Removing product from wishlist:', productId, productName, 'URL:', url);\n\n      // Verify button data attributes\n      if (!productId) {\n        console.warn('Missing product-id attribute on wishlist remove button:', button);\n      }\n\n      // Confirm removal\n      if (typeof window.Swal !== 'undefined') {\n        window.Swal.fire({\n          title: 'Remove from Wishlist',\n          text: 'Are you sure you want to remove this item from your wishlist?',\n          icon: 'question',\n          showCancelButton: true,\n          confirmButtonColor: '#dc3545',\n          cancelButtonColor: '#6c757d',\n          confirmButtonText: 'Yes, remove it',\n          cancelButtonText: 'No, keep it'\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            _this6.performWishlistRemoval(button, url, productId, productName);\n          }\n        });\n      } else {\n        if (confirm('Are you sure you want to remove this item from your wishlist?')) {\n          this.performWishlistRemoval(button, url, productId, productName);\n        }\n      }\n    }\n\n    /**\n     * Perform the wishlist removal action\n     * @param {HTMLElement} button - The button element\n     * @param {string} url - The URL to send the request to\n     * @param {string} productId - The product ID\n     * @param {string} productName - The product name\n     */\n  }, {\n    key: \"performWishlistRemoval\",\n    value: function performWishlistRemoval(button, url, productId, productName) {\n      var _this7 = this;\n      // Validate the URL\n      if (!url || typeof url !== 'string') {\n        console.error('Invalid URL for wishlist removal:', url);\n        this.showToast('Error', 'Invalid URL for wishlist removal.', 'error');\n        return;\n      }\n      this.log('Performing wishlist removal with URL:', url);\n\n      // Add active state for visual feedback\n      button.classList.add('wishlist-btn-active');\n\n      // Show loading state\n      var originalContent = button.innerHTML;\n      button.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>';\n      button.classList.add('disabled');\n\n      // Make API request using GET method to match server expectations\n      _static_js_api_client_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url).then(function (response) {\n        // Log the raw response for debugging\n        _this7.log('Raw wishlist remove response:', response);\n\n        // Ensure the response is properly parsed as JSON\n        var data;\n        try {\n          // If the response is already an object, use it directly\n          if (_typeof(response) === 'object' && response !== null) {\n            data = response;\n          }\n          // If it's a string, try to parse it as JSON\n          else if (typeof response === 'string') {\n            data = JSON.parse(response);\n          }\n          // If neither, throw an error\n          else {\n            throw new Error('Response is not a valid JSON object or string');\n          }\n        } catch (error) {\n          console.error('Error parsing response:', error, response);\n          throw new Error('Failed to parse server response');\n        }\n\n        // Log the parsed response for debugging\n        _this7.log('Parsed wishlist remove response:', data);\n\n        // Remove loading state\n        button.innerHTML = originalContent;\n        button.classList.remove('disabled');\n        button.classList.remove('wishlist-btn-active');\n        if (data.success) {\n          _this7.log('Wishlist removal successful');\n          // If we're on the wishlist page, handle the UI update\n          if (window.location.pathname.includes('/wishlist/')) {\n            // Option 1: Reload the page\n            // window.location.reload();\n\n            // Option 2: Remove the item from the DOM for better UX\n            var card = button.closest('.product-card');\n            if (card) {\n              var col = card.closest('.col');\n              if (col) {\n                // Animate removal\n                col.style.transition = 'opacity 0.5s ease';\n                col.style.opacity = '0';\n                setTimeout(function () {\n                  col.remove();\n\n                  // Check if there are any products left\n                  var productCards = document.querySelectorAll('.product-card');\n                  if (productCards.length === 0) {\n                    // If no products left, show empty wishlist message\n                    var container = document.querySelector('.container');\n                    if (container) {\n                      var row = container.querySelector('.row');\n                      if (row) {\n                        row.innerHTML = \"\\n                                                    <div class=\\\"alert alert-info\\\">\\n                                                        <p class=\\\"mb-3\\\">Your wishlist is empty.</p>\\n                                                        <a href=\\\"/shop/products/\\\" class=\\\"btn btn-primary\\\">\\n                                                            <i class=\\\"fas fa-shopping-bag me-2\\\"></i>Browse Products\\n                                                        </a>\\n                                                    </div>\\n                                                \";\n                      }\n                    }\n                  }\n                }, 500);\n              }\n            } else {\n              // Fallback to page reload if card element not found\n              window.location.reload();\n            }\n          } else {\n            // Update button state for non-wishlist pages\n            _this7.updateWishlistButtonState(button, false);\n          }\n\n          // Show success message\n          _this7.showToast('Removed from Wishlist', data.message || \"\".concat(productName, \" removed from your wishlist.\"), 'info');\n\n          // Update wishlist count if available\n          _this7.updateWishlistCount(data.wishlist_count);\n        } else {\n          _this7.log('Wishlist removal failed:', data.error);\n          // Show error message\n          _this7.showToast('Error', data.error || 'Failed to remove product from wishlist.', 'error');\n        }\n      })[\"catch\"](function (error) {\n        // Log the error for debugging\n        console.error('Error removing from wishlist:', error);\n\n        // Remove loading state\n        button.innerHTML = originalContent;\n        button.classList.remove('disabled');\n        button.classList.remove('wishlist-btn-active');\n\n        // Show detailed error for debugging\n        var errorMessage = error.message || 'An unknown error occurred';\n        _this7.showToast('Error', \"Failed to remove product from wishlist: \".concat(errorMessage), 'error');\n      });\n    }\n\n    /**\n     * Update the wishlist button state\n     * @param {HTMLElement} button - The button to update\n     * @param {boolean} isInWishlist - Whether the product is in the wishlist\n     */\n  }, {\n    key: \"updateWishlistButtonState\",\n    value: function updateWishlistButtonState(button, isInWishlist) {\n      this.log('Updating wishlist button state:', isInWishlist ? 'in wishlist' : 'not in wishlist');\n      if (isInWishlist) {\n        var _button$querySelector;\n        // Change to remove button\n        button.classList.remove('add-to-wishlist-btn');\n        button.classList.add('remove-wishlist-btn');\n        (_button$querySelector = button.querySelector('i')) === null || _button$querySelector === void 0 || _button$querySelector.classList.replace('far', 'fas');\n        button.setAttribute('title', 'Remove from wishlist');\n        button.setAttribute('aria-label', \"Remove \".concat(button.dataset.productName || 'this product', \" from wishlist\"));\n\n        // Update href\n        var newUrl = button.getAttribute('href').replace('add_to_wishlist', 'remove_from_wishlist');\n        button.setAttribute('href', newUrl);\n      } else {\n        var _button$querySelector2;\n        // Change to add button\n        button.classList.remove('remove-wishlist-btn');\n        button.classList.add('add-to-wishlist-btn');\n        (_button$querySelector2 = button.querySelector('i')) === null || _button$querySelector2 === void 0 || _button$querySelector2.classList.replace('fas', 'far');\n        button.setAttribute('title', 'Add to wishlist');\n        button.setAttribute('aria-label', \"Add \".concat(button.dataset.productName || 'this product', \" to wishlist\"));\n\n        // Update href\n        var _newUrl = button.getAttribute('href').replace('remove_from_wishlist', 'add_to_wishlist');\n        button.setAttribute('href', _newUrl);\n      }\n\n      // Update event binding\n      button.removeAttribute('data-event-bound');\n      this.initEventListeners();\n    }\n\n    /**\n     * Update the wishlist count in the UI\n     * @param {number} count - The new wishlist count\n     */\n  }, {\n    key: \"updateWishlistCount\",\n    value: function updateWishlistCount(count) {\n      if (count !== undefined) {\n        this.log('Updating wishlist count:', count);\n        document.querySelectorAll('.wishlist-count').forEach(function (element) {\n          element.textContent = count;\n        });\n      }\n    }\n\n    /**\n     * Add a toast to the queue and process it\n     * @param {string} title - The notification title\n     * @param {string} message - The notification message\n     * @param {string} type - The notification type (success, error, warning, info)\n     */\n  }, {\n    key: \"showToast\",\n    value: function showToast(title, message) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';\n      this.log('Queueing toast notification:', title, message, type);\n\n      // Add to queue\n      this.toastQueue.push({\n        title: title,\n        message: message,\n        type: type\n      });\n\n      // Process queue if not already processing\n      if (!this.processingToast) {\n        this.processToastQueue();\n      }\n    }\n\n    /**\n     * Process the toast queue\n     */\n  }, {\n    key: \"processToastQueue\",\n    value: function processToastQueue() {\n      var _this8 = this;\n      if (this.toastQueue.length === 0) {\n        this.processingToast = false;\n        return;\n      }\n      this.processingToast = true;\n      var _this$toastQueue$shif = this.toastQueue.shift(),\n        title = _this$toastQueue$shif.title,\n        message = _this$toastQueue$shif.message,\n        type = _this$toastQueue$shif.type;\n\n      // Try to display the toast\n      this.displayToast(title, message, type).then(function () {\n        // Process next toast after a short delay\n        setTimeout(function () {\n          _this8.processToastQueue();\n        }, 300);\n      })[\"catch\"](function (error) {\n        console.error('Error displaying toast:', error);\n        // Continue processing queue despite error\n        setTimeout(function () {\n          _this8.processToastQueue();\n        }, 300);\n      });\n    }\n\n    /**\n     * Display a toast notification using SweetAlert2 or fallback\n     * @param {string} title - The notification title\n     * @param {string} message - The notification message\n     * @param {string} type - The notification type (success, error, warning, info)\n     * @returns {Promise} - A promise that resolves when the toast is displayed\n     */\n  }, {\n    key: \"displayToast\",\n    value: function displayToast(title, message, type) {\n      var _this9 = this;\n      return new Promise(function (resolve, reject) {\n        _this9.log('Attempting to display toast:', title, message, type);\n\n        // Use global showToast function if available\n        if (typeof window.showToast === 'function') {\n          _this9.log('Using global showToast function');\n          window.showToast(title, message, type);\n          resolve();\n        }\n        // Use SweetAlert2 directly if available\n        else if (typeof window.Swal !== 'undefined') {\n          _this9.log('Using SweetAlert2 directly');\n          var iconType = type === 'danger' ? 'error' : type;\n          window.Swal.fire({\n            title: title,\n            text: message,\n            icon: iconType,\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: function didOpen(toast) {\n              // Apply additional styling to ensure visibility\n              toast.style.zIndex = '9999';\n              toast.style.opacity = '1';\n              toast.style.visibility = 'visible';\n              _this9.log('Toast opened:', toast);\n              toast.addEventListener('mouseenter', window.Swal.stopTimer);\n              toast.addEventListener('mouseleave', window.Swal.resumeTimer);\n            }\n          }).then(resolve)[\"catch\"](reject);\n        }\n        // Wait for SweetAlert2 to be available\n        else {\n          _this9.log('SweetAlert2 not available, waiting...');\n          // Set a timeout to avoid infinite waiting\n          var timeout = setTimeout(function () {\n            console.warn('Timed out waiting for SweetAlert2, using fallback');\n            alert(\"\".concat(title, \": \").concat(message));\n            resolve();\n          }, 2000);\n\n          // Listen for SweetAlert2 initialization\n          document.addEventListener('swal2-initialized', function () {\n            clearTimeout(timeout);\n            _this9.log('SweetAlert2 became available, displaying toast');\n            if (typeof window.Swal !== 'undefined') {\n              var _iconType = type === 'danger' ? 'error' : type;\n              window.Swal.fire({\n                title: title,\n                text: message,\n                icon: _iconType,\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: function didOpen(toast) {\n                  // Apply additional styling to ensure visibility\n                  toast.style.zIndex = '9999';\n                  toast.style.opacity = '1';\n                  toast.style.visibility = 'visible';\n                  toast.addEventListener('mouseenter', window.Swal.stopTimer);\n                  toast.addEventListener('mouseleave', window.Swal.resumeTimer);\n                }\n              }).then(resolve)[\"catch\"](reject);\n            } else {\n              alert(\"\".concat(title, \": \").concat(message));\n              resolve();\n            }\n          }, {\n            once: true\n          });\n        }\n      });\n    }\n  }]);\n}(); // Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  console.log('WishlistManager script loaded');\n  window.wishlistManager = new WishlistManager();\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WishlistManager);\n\n//# sourceURL=webpack://skunkmonkey/./shop/static/js/shop/wishlist-manager.js?");

/***/ }),

/***/ "./static/js/ajax_helper.js":
/*!**********************************!*\
  !*** ./static/js/ajax_helper.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   makeAjaxRequest: () => (/* binding */ makeAjaxRequest)\n/* harmony export */ });\n/**\n * ajax_helper.js - Utility functions for AJAX requests\n * \n * Provides standardized AJAX request functionality with CSRF protection\n * and consistent error handling.\n */\n\n/**\n * Get the CSRF token from cookies\n * @param {string} name - Cookie name\n * @returns {string} - CSRF token value\n */\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n/**\n * Makes an AJAX request and returns the jqXHR object to allow aborting the request if needed\n * @param {string} url - The URL to send the request to\n * @param {string} method - The HTTP method to use (GET, POST, etc.)\n * @param {Object|FormData} data - The data to send with the request\n * @param {Function} successCallback - Called when the request succeeds\n * @param {Function} errorCallback - Called when the request fails\n * @param {boolean} abortable - Whether to return the jqXHR object for aborting (default: true)\n * @param {boolean} processData - Whether to process the data (set to false for FormData)\n * @param {string|boolean} contentType - Content type header or false to let jQuery set it\n * @returns {Object} The jqXHR object if abortable is true, otherwise undefined\n */\nfunction makeAjaxRequest(url, method, data, successCallback, errorCallback) {\n  var abortable = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var processData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  var contentType = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'application/x-www-form-urlencoded; charset=UTF-8';\n  // Determine if data is FormData and set appropriate options\n  var isFormData = data instanceof FormData;\n  if (isFormData) {\n    processData = false;\n    contentType = false;\n  }\n\n  // Set up AJAX options\n  var ajaxOptions = {\n    url: url,\n    method: method,\n    data: data,\n    processData: processData,\n    contentType: contentType,\n    headers: {\n      'X-CSRFToken': getCookie('csrftoken'),\n      'X-Requested-With': 'XMLHttpRequest'\n    },\n    success: function success(response) {\n      if (typeof successCallback === \"function\") {\n        // Handle both JSON and HTML responses\n        if (typeof response === 'string' && response.trim().startsWith('<')) {\n          // If it's HTML content\n          successCallback({\n            html: response\n          });\n        } else {\n          // If it's JSON or other data\n          successCallback(response);\n        }\n      }\n    },\n    error: function error(jqXHR, textStatus, errorThrown) {\n      // Don't log aborted requests as errors\n      if (textStatus !== 'abort') {\n        console.error(\"AJAX Request failed:\", textStatus, errorThrown);\n        if (typeof errorCallback === \"function\") {\n          errorCallback(jqXHR, textStatus, errorThrown);\n        }\n      }\n    }\n  };\n\n  // Try to auto-detect the response type\n  if (url.includes('/api/') || url.endsWith('.json')) {\n    ajaxOptions.dataType = 'json';\n  }\n\n  // Make the request\n  var ajaxRequest = $.ajax(ajaxOptions);\n\n  // Return the jqXHR object if the request should be abortable\n  if (abortable) {\n    return ajaxRequest;\n  }\n}\n\n//# sourceURL=webpack://skunkmonkey/./static/js/ajax_helper.js?");

/***/ }),

/***/ "./static/js/api-client.js":
/*!*********************************!*\
  !*** ./static/js/api-client.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: () => (/* binding */ ApiClient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax_helper.js */ \"./static/js/ajax_helper.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * api-client.js - Standardized API client for consistent AJAX operations\n * \n * Provides a higher-level wrapper around AJAX requests with standardized\n * error handling, response parsing, and consistent promise handling.\n */\n\n\n/**\n * API Client for consistent handling of AJAX requests\n */\nvar ApiClient = /*#__PURE__*/function () {\n  /**\n   * Create a new ApiClient instance\n   * @param {Object} options - Configuration options\n   * @param {Function} options.errorHandler - Global error handler function\n   * @param {string} options.baseUrl - Base URL for API requests\n   */\n  function ApiClient() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ApiClient);\n    this.errorHandler = options.errorHandler || console.error;\n    this.baseUrl = options.baseUrl || '';\n    this.csrfToken = (0,_ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__.getCookie)('csrftoken');\n    this.pendingRequests = [];\n  }\n\n  /**\n   * Builds a complete URL for the API request\n   * @param {string} endpoint - API endpoint\n   * @returns {string} - Complete URL\n   */\n  return _createClass(ApiClient, [{\n    key: \"buildUrl\",\n    value: function buildUrl(endpoint) {\n      // If endpoint is already a full URL, return it as is\n      if (endpoint.startsWith('http') || endpoint.startsWith('/')) {\n        return endpoint;\n      }\n\n      // Otherwise, join baseUrl and endpoint\n      return \"\".concat(this.baseUrl, \"/\").concat(endpoint).replace(/([^:]\\/)\\/+/g, '$1');\n    }\n\n    /**\n     * Make a GET request to fetch data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} params - Query parameters\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"get\",\n    value: function get(endpoint) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('GET', endpoint, params, options);\n    }\n\n    /**\n     * Make a POST request to create or update data\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"post\",\n    value: function post(endpoint) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('POST', endpoint, data, options);\n    }\n\n    /**\n     * Make a DELETE request to remove data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(endpoint) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request('DELETE', endpoint, data, options);\n    }\n\n    /**\n     * Make a generic request with specified method\n     * @param {string} method - HTTP method\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n  }, {\n    key: \"request\",\n    value: function request(method, endpoint) {\n      var _this = this;\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var url = this.buildUrl(endpoint);\n      var abortable = options.abortable !== false;\n\n      // Determine if we should process the data (false for FormData)\n      var processData = !(data instanceof FormData);\n      var contentType = processData ? 'application/x-www-form-urlencoded; charset=UTF-8' : false;\n      return new Promise(function (resolve, reject) {\n        try {\n          var ajaxRequest = (0,_ajax_helper_js__WEBPACK_IMPORTED_MODULE_0__.makeAjaxRequest)(url, method, data, function (response) {\n            // Remove from pending requests\n            _this.removePendingRequest(ajaxRequest);\n            resolve(response);\n          }, function (jqXHR, textStatus, errorThrown) {\n            var _jqXHR$responseJSON;\n            // Remove from pending requests\n            _this.removePendingRequest(ajaxRequest);\n\n            // Create standardized error object\n            var error = {\n              status: jqXHR.status,\n              statusText: jqXHR.statusText,\n              responseJSON: jqXHR.responseJSON,\n              message: ((_jqXHR$responseJSON = jqXHR.responseJSON) === null || _jqXHR$responseJSON === void 0 ? void 0 : _jqXHR$responseJSON.error) || errorThrown || \"Request failed\"\n            };\n\n            // Call the global error handler if provided\n            if (_this.errorHandler && !options.skipGlobalErrorHandler) {\n              _this.errorHandler(error);\n            }\n            reject(error);\n          }, abortable, processData, contentType);\n\n          // Track the request if abortable\n          if (abortable && ajaxRequest) {\n            _this.pendingRequests.push(ajaxRequest);\n          }\n\n          // If there's a timeout option, handle it\n          if (options.timeout) {\n            setTimeout(function () {\n              if (ajaxRequest && ajaxRequest.readyState < 4) {\n                ajaxRequest.abort();\n                reject({\n                  message: 'Request timed out',\n                  status: 0,\n                  statusText: 'timeout'\n                });\n              }\n            }, options.timeout);\n          }\n        } catch (error) {\n          console.error(\"Error making request:\", error);\n          reject({\n            message: error.message || \"Failed to make request\",\n            error: error\n          });\n        }\n      });\n    }\n\n    /**\n     * Remove a request from the pending requests list\n     * @param {Object} request - The request to remove\n     */\n  }, {\n    key: \"removePendingRequest\",\n    value: function removePendingRequest(request) {\n      var index = this.pendingRequests.indexOf(request);\n      if (index !== -1) {\n        this.pendingRequests.splice(index, 1);\n      }\n    }\n\n    /**\n     * Abort all pending requests\n     */\n  }, {\n    key: \"abortAll\",\n    value: function abortAll() {\n      this.pendingRequests.forEach(function (request) {\n        if (request && typeof request.abort === 'function') {\n          request.abort();\n        }\n      });\n      this.pendingRequests = [];\n    }\n  }]);\n}();\n\n// Create a default instance\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ApiClient());\n\n//# sourceURL=webpack://skunkmonkey/./static/js/api-client.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./shop/static/js/shop/wishlist-initializer.js");
/******/ 	
/******/ })()
;