{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://skunkmonkey/./static/js/main.js","webpack://skunkmonkey/./static/js/messages.js","webpack://skunkmonkey/webpack/bootstrap","webpack://skunkmonkey/webpack/runtime/chunk loaded","webpack://skunkmonkey/webpack/runtime/compat get default export","webpack://skunkmonkey/webpack/runtime/define property getters","webpack://skunkmonkey/webpack/runtime/hasOwnProperty shorthand","webpack://skunkmonkey/webpack/runtime/make namespace object","webpack://skunkmonkey/webpack/runtime/jsonp chunk loading","webpack://skunkmonkey/webpack/before-startup","webpack://skunkmonkey/webpack/startup","webpack://skunkmonkey/webpack/after-startup"],"sourcesContent":["/*!\n* Start Bootstrap - Full Width Pics v5.0.6 (https://startbootstrap.com/template/full-width-pics)\n* Copyright 2013-2023 Start Bootstrap\n* Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-full-width-pics/blob/master/LICENSE)\n*/\nimport $ from 'jquery'; // Import jQuery\nimport 'bootstrap/dist/js/bootstrap.bundle.js';   // Import Bootstrap JS Bundle\nimport { displayMessages } from './messages'; // Assuming messages.js contains displayMessages\nimport Swal from 'sweetalert2'; // Import SweetAlert2\n\n// Make SweetAlert2 globally available\nwindow.Swal = Swal;\n\n// Initialize when DOM is loaded\n$(function() {\n    console.log('Initializing main.js with SweetAlert2');\n    \n    // Initialize SweetAlert2 with default options\n    const swalDefaults = Swal.mixin({\n        confirmButtonColor: '#0d6efd',\n        cancelButtonColor: '#6c757d'\n    });\n    \n    // Make the mixin available globally\n    window.SwalDefault = swalDefaults;\n    \n    // Test SweetAlert2 is working\n    console.log('SweetAlert2 version:', Swal.version);\n    \n    // Global function to show toast notifications\n    window.showToast = function(title, message, type = 'info') {\n        console.log('Global showToast called:', title, message, type);\n        const iconType = type === 'danger' ? 'error' : type;\n        \n        // Ensure the toast is visible by setting important z-index and opacity\n        const toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n                // Apply additional styling to ensure visibility\n                toast.style.zIndex = '9999';\n                toast.style.opacity = '1';\n                toast.style.visibility = 'visible';\n                \n                // Add event listeners\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n                \n                // Log that toast was opened\n                console.log('Toast opened successfully');\n            }\n        });\n        \n        // Fire the toast with a small delay to ensure DOM is ready\n        setTimeout(() => {\n            toast.fire({\n                title: title,\n                text: message,\n                icon: iconType\n            }).then(() => {\n                console.log('Toast closed');\n            }).catch(err => {\n                console.error('Error showing toast:', err);\n            });\n        }, 100);\n    };\n    \n    // Dispatch an event to notify other scripts that SweetAlert2 is initialized\n    document.dispatchEvent(new Event('swal2-initialized'));\n    \n    // Display initial messages on page load\n    displayMessages(window.messages || []);\n});","// /static/js/messages.js\nimport Swal from 'sweetalert2';  // Import SweetAlert2\n\nexport function displayMessages(messages) { // updated to accept parameter\n    messages.forEach(message => {\n        Swal.fire({\n            title: message.tags === \"error\" ? \"Error\" : message.tags === \"success\" ? \"Success\" : \"Message\",\n            text: message.message,\n            icon: message.tags === \"error\" ? \"error\" : message.tags === \"success\" ? \"success\" : \"info\",\n            confirmButtonText: 'OK'\n        });\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"js/main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkskunkmonkey\"] = self[\"webpackChunkskunkmonkey\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], () => (__webpack_require__(\"./static/js/main.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["$","displayMessages","Swal","window","console","log","swalDefaults","mixin","confirmButtonColor","cancelButtonColor","SwalDefault","version","showToast","title","message","type","arguments","length","undefined","iconType","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","style","zIndex","opacity","visibility","addEventListener","stopTimer","resumeTimer","setTimeout","fire","text","icon","then","err","error","document","dispatchEvent","Event","messages","forEach","tags","confirmButtonText"],"sourceRoot":""}