{"version":3,"file":"products_static_js_filters_js.js","mappings":"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","sources":["webpack://skunkmonkey/./products/static/js/filters.js","webpack://skunkmonkey/./products/static/js/filters/category-filter-manager.js","webpack://skunkmonkey/./products/static/js/filters/filter-ui-manager.js","webpack://skunkmonkey/./products/static/js/utilities/array-utils.js","webpack://skunkmonkey/./products/static/js/utilities/form-utils.js","webpack://skunkmonkey/./products/static/js/utilities/notifications.js"],"sourcesContent":["/**\n * filters.js - Reusable filtering component for product and category management\n * Refactored to use a modular approach with utility modules and ApiClient\n */\nimport 'select2';\nimport apiClient from '../../../static/js/api-client.js';\nimport notifications from './utilities/notifications.js';\nimport { setDisabledState } from './utilities/form-utils.js';\nimport { CategoryFilterManager } from './filters/category-filter-manager.js';\nimport { FilterUIManager } from './filters/filter-ui-manager.js';\n\n/**\n * ItemFilter - Handles item filtering and category selection\n */\nexport class ItemFilter {\n    /**\n     * Initialize the filter component\n     * @param {Object} options - Configuration options\n     * @param {string} options.containerId - ID of the container element\n     * @param {string} options.filterUrl - URL to fetch filtered items\n     * @param {Function} [options.onUpdate] - Callback after filter update\n     * @param {number} [options.searchDelay=300] - Debounce delay for search\n     * @param {string} [options.itemType='products'] - Type of items being filtered\n     * @param {boolean} [options.filterOnCategorySelect=true] - Whether to filter when categories change\n     */\n    constructor(options) {\n        // Core settings\n        this.containerId = options.containerId;\n        this.filterUrl = options.filterUrl;\n        this.onUpdate = options.onUpdate || function() {};\n        this.searchDelay = options.searchDelay || 300;\n        this.itemType = options.itemType || 'products';\n        this.filterOnCategorySelect = options.filterOnCategorySelect !== undefined ? \n            options.filterOnCategorySelect : true;\n        \n        // State management\n        this.container = $(`#${this.containerId}`);\n        this.searchTimeout = null;\n        this.pendingRequest = null;\n        this.lastFilteredValue = '';\n        \n        // Initialize specialized managers\n        this.categoryManager = new CategoryFilterManager(this);\n        this.uiManager = new FilterUIManager(this);\n        \n        // Initialize components\n        this._initialize();\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Initialize all components\n     * @private\n     */\n    _initialize() {\n        this.categoryManager.initialize();\n        this.uiManager.initialize();\n        this._initializeEventListeners();\n        \n        // Initial filter to load data with applied filters\n        // This ensures any pre-selected categories or search terms are applied\n        this.filterItems();\n    }\n    \n    /**\n     * Initialize all event listeners\n     * @private\n     */\n    _initializeEventListeners() {\n        this._setupSearchEvents();\n        this._setupSortEvents();\n        this._setupResetEvents();\n        this._setupListProductsEvent();\n    }\n\n    // -------------------------------------------------------------------------\n    // Event Handling Methods\n    // -------------------------------------------------------------------------\n    \n    /**\n     * Set up search-related events\n     * @private\n     */\n    _setupSearchEvents() {\n        const searchSelector = '.filter-search';\n        \n        // Use event delegation for better performance\n        this.container.on('input', searchSelector, this._handleSearchInput.bind(this));\n        this.container.on('click', '.clear-search', this._handleClearSearch.bind(this));\n    }\n    \n    /**\n     * Handle search input events with debounce\n     * @private\n     * @param {Event} e - The input event\n     */\n    _handleSearchInput(e) {\n        const searchInput = $(e.currentTarget);\n        const currentValue = searchInput.val();\n        \n        // Only trigger search if value has changed\n        if (currentValue !== this.lastFilteredValue) {\n            clearTimeout(this.searchTimeout);\n            this.searchTimeout = setTimeout(() => {\n                this.lastFilteredValue = currentValue;\n                this.filterItems();\n            }, this.searchDelay);\n        }\n    }\n    \n    /**\n     * Handle clear search button clicks\n     * @private\n     */\n    _handleClearSearch() {\n        this.container.find('.filter-search').val('');\n        this.lastFilteredValue = '';\n        this.filterItems();\n    }\n    \n    /**\n     * Set up sort-related events\n     * @private\n     */\n    _setupSortEvents() {\n        this.container.on('change', '.filter-sort', () => {\n            this.filterItems();\n        });\n    }\n    \n    /**\n     * Set up reset-related events\n     * @private\n     */\n    _setupResetEvents() {\n        this.container.on('click', '.reset-all-filters', () => {\n            const clearSearchBtn = this.container.find('.clear-search');\n            const clearCategoriesBtn = this.container.find('.clear-categories-btn');\n            \n            if (clearSearchBtn.length) clearSearchBtn.click();\n            if (clearCategoriesBtn.length) clearCategoriesBtn.click();\n        });\n    }\n    \n    /**\n     * Set up List Products button for category view\n     * @private\n     */\n    _setupListProductsEvent() {\n        this.container.on('click', '.list-products-btn', () => {\n            const selectedCategories = this.categoryManager.getSelectedCategories();\n            if (selectedCategories.length > 0) {\n                // Redirect to products view with selected categories\n                window.location.href = `/products/staff/management/?category=${selectedCategories.join(',')}`;\n                \n                // Ensure the Product accordion is open\n                setTimeout(() => {\n                    $('#product-list-section').addClass('show');\n                    $('#products-header button').attr('aria-expanded', 'true').removeClass('collapsed');\n                    \n                    // Scroll to the product section\n                    $('html, body').animate({\n                        scrollTop: $('#products-header').offset().top - 100\n                    }, 500);\n                }, 300);\n            } else {\n                notifications.displayWarning('Please select at least one category first.');\n            }\n        });\n    }\n\n    // -------------------------------------------------------------------------\n    // Filtering Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Filter items based on current filter settings\n     */\n    filterItems() {\n        // Cancel any pending request\n        this._cancelPendingRequest();\n\n        // Gather filter parameters\n        const requestParams = this._buildRequestParams();\n        \n        // Update UI before sending request\n        this.uiManager.updateFilterSummary();\n        this._showLoading(true);\n        \n        // Save search field focus state\n        const focusState = this._captureSearchFieldState();\n        \n        // Make the request using ApiClient\n        this._makeFilterRequest(requestParams, focusState);\n    }\n    \n    /**\n     * Cancel any pending filter request\n     * @private\n     */\n    _cancelPendingRequest() {\n        // If there's a pending request reference, abort it\n        if (this.pendingRequest) {\n            // Try using ApiClient's abort method first\n            if (apiClient.pendingRequests && apiClient.pendingRequests.includes(this.pendingRequest)) {\n                apiClient.removePendingRequest(this.pendingRequest);\n                if (typeof this.pendingRequest.abort === 'function') {\n                    this.pendingRequest.abort();\n                }\n            } \n            // Fallback to direct abort if needed\n            else if (typeof this.pendingRequest.abort === 'function') {\n                this.pendingRequest.abort();\n            }\n            \n            this.pendingRequest = null;\n        }\n    }\n    \n    /**\n     * Build request parameters for filtering\n     * @private\n     * @returns {Object} Request parameters\n     */\n    _buildRequestParams() {\n        const currentInputValue = this.container.find('.filter-search').val();\n        const selectedCategories = this.categoryManager.getSelectedCategories();\n        const categoryParam = selectedCategories.join(',');\n        \n        const requestParams = {\n            search: currentInputValue,\n            sort: this.container.find('.filter-sort').val(),\n            items_only: true\n        };\n        \n        // Only include category parameter for product filtering, not for category filtering\n        // This way, when on the categories page, we'll show all categories regardless of which ones are selected\n        if (categoryParam && this.itemType !== 'categories') {\n            requestParams.category = categoryParam;\n        }\n        \n        // Debug logging to help track what parameters are being sent\n        console.log(`Building filter params for ${this.itemType}:`, requestParams);\n        \n        return requestParams;\n    }\n    \n    /**\n     * Capture the current state of the search field for restoring later\n     * @private\n     * @returns {Object} The search field state\n     */\n    _captureSearchFieldState() {\n        const searchField = this.container.find('.filter-search');\n        const wasSearchFocused = document.activeElement === searchField[0];\n        \n        return {\n            field: searchField,\n            wasFocused: wasSearchFocused,\n            selectionStart: wasSearchFocused ? searchField[0].selectionStart : null,\n            selectionEnd: wasSearchFocused ? searchField[0].selectionEnd : null\n        };\n    }\n    \n    /**\n     * Make the filter request to the server using ApiClient\n     * @private\n     * @param {Object} requestParams - The filter parameters\n     * @param {Object} focusState - The search field focus state\n     */\n    _makeFilterRequest(requestParams, focusState) {\n        // Use ApiClient.get with Promise handling\n        this.pendingRequest = apiClient.get(this.filterUrl, requestParams, {\n            // Skip global error handler as we'll handle errors here\n            skipGlobalErrorHandler: true\n        })\n        .then(response => {\n            this._handleFilterSuccess(response, focusState);\n        })\n        .catch(error => {\n            this._handleFilterError(error, focusState);\n        })\n        .finally(() => {\n            // This will execute regardless of success or failure\n            this.pendingRequest = null;\n        });\n    }\n    \n    /**\n     * Handle successful filter response\n     * @private\n     * @param {Object|string} response - The server response\n     * @param {Object} focusState - The search field focus state\n     */\n    _handleFilterSuccess(response, focusState) {\n        try {\n            this._processSuccessfulResponse(response);\n        } catch (error) {\n            console.error('Error processing filter results:', error);\n        } finally {\n            this._finishFilterRequest(focusState);\n        }\n    }\n    \n    /**\n     * Handle filter request error\n     * @private\n     * @param {Object} error - The error object\n     * @param {Object} focusState - The search field focus state\n     */\n    _handleFilterError(error, focusState) {\n        if (error.statusText !== 'abort') {\n            console.error(`Error fetching ${this.itemType}:`, error);\n            notifications.displayError(`Failed to filter ${this.itemType}. Please try again.`);\n        }\n        this._finishFilterRequest(focusState);\n    }\n    \n    /**\n     * Common cleanup after filter request completes\n     * @private\n     * @param {Object} focusState - The search field focus state\n     */\n    _finishFilterRequest(focusState) {\n        this._showLoading(false);\n        \n        // Restore search field focus if it was focused before\n        if (focusState.wasFocused) {\n            focusState.field.focus();\n            if (focusState.selectionStart !== null && focusState.selectionEnd !== null) {\n                focusState.field[0].setSelectionRange(\n                    focusState.selectionStart, \n                    focusState.selectionEnd\n                );\n            }\n        }\n    }\n    \n    /**\n     * Process a successful API response\n     * @private\n     * @param {Object|string} response - The server response\n     */\n    _processSuccessfulResponse(response) {\n        // Find the proper container to update based on the item type\n        let itemContainer;\n        \n        if (this.itemType === 'categories') {\n            // Try to find the category cards grid first\n            itemContainer = $('#category-cards-grid');\n            \n            // If not found, try to locate it within our container\n            if (!itemContainer.length) {\n                itemContainer = this.container.find('#category-cards-grid');\n            }\n            \n            // Fallback to the filtered-items container if it exists\n            if (!itemContainer.length) {\n                itemContainer = this.container.find('.filtered-items');\n            }\n        } else {\n            // Try to find the product cards grid first\n            itemContainer = $('#product-cards-grid');\n            \n            // If not found, try to locate it within our container\n            if (!itemContainer.length) {\n                itemContainer = this.container.find('#product-cards-grid');\n            }\n            \n            // Fallback to the filtered-items container if it exists\n            if (!itemContainer.length) {\n                itemContainer = this.container.find('.filtered-items');\n            }\n        }\n        \n        // If we still don't have a container, fall back to the main container\n        if (!itemContainer.length) {\n            console.warn(`Could not find specific container for ${this.itemType}, using main container`);\n            itemContainer = this.container;\n        }\n        \n        // Update the content with the new HTML\n        if (response.html) {\n            itemContainer.html(response.html);\n            console.log(`Updated ${this.itemType} HTML content from response.html`);\n        } else if (typeof response === 'string') {\n            itemContainer.html(response);\n            console.log(`Updated ${this.itemType} HTML content from string response`);\n        } else {\n            console.warn(`No HTML content found in response for ${this.itemType}`);\n        }\n        \n        // Get item count using the most reliable method available\n        const itemCount = this._extractItemCount(response, itemContainer);\n        \n        // Update count displays\n        this.uiManager.updateItemCountDisplays(itemCount);\n        \n        // Call the onUpdate callback if provided\n        if (typeof this.onUpdate === 'function') {\n            this.onUpdate(response);\n        }\n        \n        console.log(`Updated ${this.itemType} container with new content. Count: ${itemCount}`);\n    }\n    \n    /**\n     * Extract the item count from the response using multiple fallback strategies\n     * @private\n     * @param {Object|string} response - The server response\n     * @param {jQuery} container - The items container\n     * @returns {number} The item count\n     */\n    _extractItemCount(response, container) {\n        // Try API response properties first\n        if (response.count !== undefined) {\n            return response.count;\n        } else if (response.total_count !== undefined) {\n            return response.total_count;\n        }\n        \n        // Fallback to counting DOM elements\n        return this._countItemsInContainer(container);\n    }\n    \n    /**\n     * Count items in the container as a fallback\n     * @private\n     * @param {jQuery} container - The items container\n     * @returns {number} The item count\n     */\n    _countItemsInContainer(container) {\n        // Try to count items based on common selectors\n        const itemSelectors = ['.card', '.item', '.product-card', '.category-card'];\n        \n        for (const selector of itemSelectors) {\n            const count = container.find(selector).length;\n            if (count > 0) return count;\n        }\n        \n        return 0;\n    }\n    \n    /**\n     * Show or hide loading state\n     * @private\n     * @param {boolean} show - Whether to show loading state\n     */\n    _showLoading(show) {\n        setDisabledState(this.container, '.filter-sort', show);\n        // Don't disable the search field to prevent focus issues\n        this.container.find('.filter-loading').toggleClass('loading', show);\n    }\n    \n    // -------------------------------------------------------------------------\n    // Public API Methods\n    // -------------------------------------------------------------------------\n    \n    /**\n     * Public method to apply saved categories (used by CategoryManager)\n     */\n    preloadCategories() {\n        this.categoryManager.applySavedCategories();\n    }\n    \n    /**\n     * Clean up resources to prevent memory leaks\n     */\n    destroy() {\n        // Clear timeouts\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        \n        // Abort any pending request\n        if (this.pendingRequest) {\n            this.pendingRequest.abort();\n        }\n        \n        // Remove event handlers\n        this.container.off('input', '.filter-search');\n        this.container.off('click', '.clear-search');\n        this.container.off('change', '.filter-sort');\n        this.container.off('click', '.reset-all-filters');\n        this.container.off('click', '.list-products-btn');\n        \n        // Destroy managers\n        this.categoryManager.destroy();\n        this.uiManager.destroy();\n    }\n}\n","/**\n * category-filter-manager.js - Handles category selection and management for filters\n */\nimport { setupSelect2 } from '../utilities/form-utils.js';\nimport { removeFromArray } from '../utilities/array-utils.js';\n\n/**\n * CategoryFilterManager - Handles category selection and management\n */\nexport class CategoryFilterManager {\n    constructor(filterInstance) {\n        this.filter = filterInstance;\n        this.container = filterInstance.container;\n        this.selectedCategories = this._getSavedCategories() || [];\n    }\n    \n    /**\n     * Initialize category management\n     */\n    initialize() {\n        this._initializeSelect2();\n        this._setupCategoryEvents();\n        this._renderCategoryTags();\n        this._updateCategoryCardStyling();\n        \n        // Update product count on initialization if categories are already selected\n        if (this.selectedCategories.length > 0 && this.filter.itemType === 'categories') {\n            this.filter.uiManager._updateProductCount();\n        }\n    }\n    \n    /**\n     * Initialize Select2 dropdown for categories\n     */\n    _initializeSelect2() {\n        const selectElement = this.container.find('.filter-category');\n        if (!selectElement.length) return;\n        \n        setupSelect2(selectElement, {\n            url: '/products/api/categories/search/',\n            formatResult: (category) => this._formatCategoryOption(category),\n            multiple: true,\n            allowClear: true,\n            closeOnSelect: false,\n            placeholder: 'Select or search categories'\n        });\n        \n        // Set up checkbox behavior in dropdown\n        this._setupCheckboxHandlers();\n        \n        // Handle Select2 dropdown opening to update checkbox states\n        selectElement.on('select2:open', () => {\n            // Use setTimeout to ensure the dropdown is rendered before we try to update checkboxes\n            setTimeout(() => {\n                this._updateDropdownCheckboxes();\n            }, 50);\n        });\n    }\n    \n    /**\n     * Format category options with checkboxes\n     * @param {Object} category - The category data from Select2\n     * @returns {jQuery} The formatted dropdown option\n     */\n    _formatCategoryOption(category) {\n        if (!category.id) return category.text;\n        \n        // Check if the category is in our selected categories\n        const isSelected = this.selectedCategories.includes(category.id.toString());\n        \n        return $(`\n            <div class=\"select2-result-category\">\n                <input type=\"checkbox\" class=\"form-check-input me-2\" id=\"category-${category.id}\" \n                       ${isSelected ? 'checked' : ''}>\n                <label for=\"category-${category.id}\">${category.text}</label>\n            </div>\n        `);\n    }\n    \n    /**\n     * Update checkbox states in the dropdown to match current selections\n     * This is called when the dropdown is opened\n     */\n    _updateDropdownCheckboxes() {\n        // Find all checkboxes in the dropdown\n        $('.select2-results__options .select2-result-category input[type=\"checkbox\"]').each((_, checkbox) => {\n            const $checkbox = $(checkbox);\n            const categoryId = $checkbox.attr('id').replace('category-', '');\n            \n            // Set checked state based on whether the category is in selectedCategories\n            const isSelected = this.selectedCategories.includes(categoryId);\n            $checkbox.prop('checked', isSelected);\n        });\n    }\n    \n    /**\n     * Set up handlers for checkbox clicks in dropdown\n     */\n    _setupCheckboxHandlers() {\n        $(document).off('click', '.select2-result-category input[type=\"checkbox\"]')\n            .on('click', '.select2-result-category input[type=\"checkbox\"]', (e) => {\n                e.stopPropagation();\n                \n                const checkbox = $(e.currentTarget);\n                const id = checkbox.attr('id').replace('category-', '');\n                const selectElement = this.container.find('.filter-category');\n                const currentSelection = selectElement.val() || [];\n                \n                let newSelection = [...currentSelection];\n                \n                if (checkbox.is(':checked') && !newSelection.includes(id)) {\n                    newSelection.push(id);\n                } else if (!checkbox.is(':checked')) {\n                    newSelection = removeFromArray(newSelection, id);\n                }\n                \n                selectElement.val(newSelection).trigger('change');\n            });\n    }\n    \n    /**\n     * Set up category-related events\n     */\n    _setupCategoryEvents() {\n        const selectElement = this.container.find('.filter-category');\n        if (!selectElement.length) return;\n        \n        // Handle category selection changes\n        selectElement.on('change', () => {\n            const newSelection = selectElement.val() || [];\n            this.selectedCategories = newSelection.map(id => id.toString()); // Ensure string IDs\n            this._saveCategories(this.selectedCategories);\n            \n            this.container.find('.category-count').text(this.selectedCategories.length);\n            this._renderCategoryTags();\n            \n            // Update category card styling to match selection\n            this._updateCategoryCardStyling();\n            \n            // Always update the filter summary when categories change\n            this.filter.uiManager.updateFilterSummary();\n            \n            // Always trigger filtering for product page\n            if (this.filter.itemType === 'products') {\n                this.filter.filterItems();\n            }\n            // For categories page, only filter if the option is enabled\n            else if (this.filter.filterOnCategorySelect) {\n                this.filter.filterItems();\n            }\n        });\n        \n        // Clear categories button\n        this.container.on('click', '.clear-categories-btn', () => {\n            selectElement.val([]).trigger('change');\n            this._saveCategories([]);\n            this.container.find('.category-count').text('0');\n            this._renderCategoryTags();\n            \n            // Always update the filter summary\n            this.filter.uiManager.updateFilterSummary();\n            \n            // Always trigger filtering for product page\n            if (this.filter.itemType === 'products') {\n                this.filter.filterItems();\n            }\n            // For categories page, only filter if the option is enabled\n            else if (this.filter.filterOnCategorySelect) {\n                this.filter.filterItems();\n            }\n        });\n        \n        // Handle clicks on category cards - use document-level event delegation\n        // This ensures the handler works even after cards are refreshed via AJAX\n        $(document).off('click', '.category-header')\n            .on('click', '.category-header', (e) => {\n                // Only handle if not clicking on a button or link inside the card\n                if (!$(e.target).closest('button, a').length) {\n                    const categoryId = $(e.currentTarget).data('category-id');\n                    if (categoryId) {\n                        this._toggleCategory(categoryId.toString());\n                        return false; // Prevent any parent handlers from triggering\n                    }\n                }\n            });\n    }\n    \n    /**\n     * Toggle a category selection by ID\n     */\n    _toggleCategory(categoryId) {\n        console.log('Toggling category:', categoryId);\n        const selectElement = this.container.find('.filter-category');\n        if (!selectElement.length) return;\n        \n        const currentSelection = selectElement.val() || [];\n        let newSelection = [...currentSelection];\n        \n        if (newSelection.includes(categoryId)) {\n            newSelection = removeFromArray(newSelection, categoryId);\n        } else {\n            newSelection.push(categoryId);\n        }\n        \n        // Update the Select2 dropdown\n        selectElement.val(newSelection).trigger('change');\n        \n        // Force the Select2 control to update its UI\n        try {\n            selectElement.trigger('change.select2');\n            \n            // If the dropdown is open, update checkbox states\n            if ($('.select2-results__options').is(':visible')) {\n                this._updateDropdownCheckboxes();\n            }\n        } catch (e) {\n            console.warn('Error triggering Select2 change:', e);\n        }\n    }\n    \n    /**\n     * Update the styling of category cards based on selection state\n     */\n    _updateCategoryCardStyling() {\n        // Reset all cards to unselected state\n        $('.category-header').removeClass('bg-primary text-white selected').addClass('bg-light');\n        \n        // Apply selected styling to cards that match the current selection\n        this.selectedCategories.forEach(categoryId => {\n            $(`.category-header[data-category-id=\"${categoryId}\"]`)\n                .removeClass('bg-light')\n                .addClass('bg-primary text-white selected');\n        });\n    }\n    \n    /**\n     * Render category tags based on selected categories\n     */\n    _renderCategoryTags() {\n        const tagsContainer = this.container.find('.selected-categories-tags');\n        if (!tagsContainer.length) return;\n        \n        tagsContainer.empty();\n        \n        if (!this.selectedCategories.length) {\n            tagsContainer.hide();\n            return;\n        }\n        \n        // Get category names from select options\n        const selectElement = this.container.find('.filter-category');\n        const selectedOptions = Array.from(selectElement.find('option:selected'));\n        \n        selectedOptions.forEach(option => {\n            const categoryId = $(option).val();\n            const categoryName = $(option).text();\n            \n            const tag = $(`\n                <span class=\"badge bg-primary me-1 mb-1 category-tag\" data-category-id=\"${categoryId}\">\n                    ${categoryName}\n                    <button type=\"button\" class=\"btn-close btn-close-white ms-1\" aria-label=\"Remove\"></button>\n                </span>\n            `);\n            \n            tag.find('.btn-close').on('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.removeCategory(categoryId);\n            });\n            \n            tagsContainer.append(tag);\n        });\n        \n        tagsContainer.show();\n    }\n    \n    /**\n     * Remove a specific category by ID\n     */\n    removeCategory(categoryId) {\n        const selectElement = this.container.find('.filter-category');\n        const currentSelection = selectElement.val() || [];\n        const newSelection = removeFromArray(currentSelection, categoryId);\n        \n        selectElement.val(newSelection).trigger('change');\n    }\n    \n    /**\n     * Save selected categories to localStorage\n     */\n    _saveCategories(categories) {\n        const normalizedCategories = categories.map(id => id.toString());\n        this.selectedCategories = normalizedCategories;\n        localStorage.setItem('selectedCategories', JSON.stringify(normalizedCategories));\n    }\n\n    /**\n     * Get saved categories from localStorage\n     */\n    _getSavedCategories() {\n        const savedCategories = localStorage.getItem('selectedCategories');\n        return savedCategories ? JSON.parse(savedCategories) : [];\n    }\n    \n    /**\n     * Apply saved categories to the UI\n     */\n    applySavedCategories() {\n        const savedCategories = this._getSavedCategories();\n        if (!savedCategories || savedCategories.length === 0) return;\n        \n        const selectElement = this.container.find('.filter-category');\n        selectElement.val(savedCategories);\n        \n        try {\n            selectElement.trigger('change.select2');\n            \n            // If the dropdown is open, update checkbox states\n            if ($('.select2-results__options').is(':visible')) {\n                this._updateDropdownCheckboxes();\n            }\n        } catch (e) {\n            console.warn('Error triggering Select2 change:', e);\n            selectElement.trigger('change');\n        }\n        \n        this.container.find('.category-count').text(savedCategories.length);\n        this._renderCategoryTags();\n        \n        // Update product count on initialization if categories are loaded from localStorage\n        if (savedCategories.length > 0 && this.filter.itemType === 'categories') {\n            this.filter.uiManager._updateProductCount();\n        }\n        \n        // If we're on the products page, filter items based on the loaded categories\n        if (this.filter.itemType === 'products' && savedCategories.length > 0) {\n            this.filter.filterItems();\n        }\n    }\n    \n    /**\n     * Get the currently selected categories\n     */\n    getSelectedCategories() {\n        return this.selectedCategories;\n    }\n    \n    /**\n     * Clean up resources\n     */\n    destroy() {\n        const selectElement = this.container.find('.filter-category');\n        \n        // Remove event handlers\n        this.container.off('click', '.clear-categories-btn');\n        selectElement.off('change');\n        selectElement.off('select2:open');\n        \n        // Remove category card click handler\n        $(document).off('click', '.category-header');\n        \n        // Clean up Select2\n        if (selectElement.length && $.fn.select2) {\n            try {\n                selectElement.select2('destroy');\n            } catch (e) {\n                console.warn('Error destroying Select2:', e);\n            }\n        }\n        \n        // Clean up document event handlers\n        $(document).off('click', '.select2-result-category input[type=\"checkbox\"]');\n        \n        // Clean up category tags\n        this.container.find('.selected-categories-tags .btn-close').off('click');\n    }\n}\n","/**\n * filter-ui-manager.js - Handles filter UI interactions and updates\n */\nimport { toggleElement } from '../utilities/form-utils.js';\nimport apiClient from '../../../../static/js/api-client.js';\n\n/**\n * FilterUIManager - Handles filter UI interactions and updates\n */\nexport class FilterUIManager {\n    constructor(filterInstance) {\n        this.filter = filterInstance;\n        this.container = filterInstance.container;\n        this.itemType = filterInstance.itemType;\n        this.productCountElement = this.container.find('.product-count');\n    }\n    \n    /**\n     * Initialize UI management\n     */\n    initialize() {\n        this._setupToggleEvents();\n        this._setupListProductsVisibility();\n        \n        // Get initial count from server instead of hardcoding to 0\n        this._loadInitialItemCount();\n        \n        // Add the product count element to the filter summary if it doesn't exist\n        if (this.itemType === 'categories' && !this.productCountElement.length) {\n            const filterSummary = this.container.find('#filterSummary .results-count');\n            if (filterSummary.length) {\n                filterSummary.append('<span class=\"ms-2 text-muted product-count-display d-none\">| <span class=\"product-count\">0</span> products</span>');\n                this.productCountElement = this.container.find('.product-count');\n            }\n        }\n    }\n    \n    /**\n     * Load the initial item count from the server\n     * @private\n     */\n    _loadInitialItemCount() {\n        // Create a simple request to get the count\n        const requestParams = { \n            items_only: true,\n            count_only: true  // Optional param - server can optimize if it supports this\n        };\n        \n        // Use the same URL as the filter component\n        apiClient.get(this.filter.filterUrl, requestParams, {\n            skipGlobalErrorHandler: true\n        })\n        .then(response => {\n            // Extract count from response\n            let count = 0;\n            if (response.count !== undefined) {\n                count = response.count;\n            } else if (response.total_count !== undefined) {\n                count = response.total_count;\n            } else if (typeof response === 'string' && $(response).find('.card').length > 0) {\n                // If HTML response, try to count cards\n                count = $(response).find('.card').length;\n            }\n            \n            // Update all count displays with the initial count\n            this.updateItemCountDisplays(count);\n        })\n        .catch(error => {\n            console.warn('Error loading initial item count:', error);\n            // If error, initialize to 0 as fallback\n            this.updateItemCountDisplays(0);\n        });\n    }\n    \n    /**\n     * Set up filter toggle events\n     */\n    _setupToggleEvents() {\n        const filterToggle = this.container.find('.filter-toggle');\n        const filterOptions = this.container.find('#filterOptions');\n        \n        if (!filterToggle.length || !filterOptions.length) return;\n        \n        filterToggle.on('click', (e) => {\n            e.preventDefault();\n            \n            toggleElement(filterOptions, {\n                onShow: () => {\n                    filterToggle.addClass('active');\n                    filterToggle.find('.filter-toggle-text').text('Hide Filters');\n                    filterToggle.find('i').removeClass('fa-sliders-h').addClass('fa-times');\n                    filterToggle.removeClass('btn-outline-primary').addClass('btn-primary');\n                    filterToggle.attr('aria-expanded', 'true');\n                    this.container.find('.filter-summary-category-tags').hide();\n                    \n                    // Hide the collapsed version of the List Products button\n                    if (this.itemType === 'categories') {\n                        this.container.find('.collapsed-list-products-btn-container').addClass('d-none');\n                    }\n                },\n                onHide: () => {\n                    filterToggle.removeClass('active');\n                    filterToggle.find('.filter-toggle-text').text('Show Filters');\n                    filterToggle.find('i').addClass('fa-sliders-h').removeClass('fa-times');\n                    filterToggle.removeClass('btn-primary').addClass('btn-outline-primary');\n                    filterToggle.attr('aria-expanded', 'false');\n                    this.container.find('.filter-summary-category-tags').show();\n                    \n                    // Show the collapsed version of the List Products button if we have selected categories\n                    if (this.itemType === 'categories') {\n                        const hasSelectedCategories = this.filter.categoryManager.getSelectedCategories().length > 0;\n                        this.container.find('.collapsed-list-products-btn-container')\n                            .toggleClass('d-none', !hasSelectedCategories);\n                    }\n                }\n            });\n        });\n        \n        // Set up filter summary badge close handlers\n        this.container.find('#filterSummary .search-summary .btn-close').on('click', (e) => {\n            e.stopPropagation();\n            this.container.find('.clear-search').click();\n        });\n        \n        this.container.find('#filterSummary .categories-summary .btn-close').on('click', (e) => {\n            e.stopPropagation();\n            this.container.find('.clear-categories-btn').click();\n        });\n    }\n    \n    /**\n     * Setup the List Products button visibility when filters are collapsed\n     */\n    _setupListProductsVisibility() {\n        if (this.itemType !== 'categories') return;\n        \n        // Make sure the List Products button click events are synchronized\n        const collapsedBtn = this.container.find('.collapsed-list-products-btn-container .list-products-btn');\n        const expandedBtn = this.container.find('#expanded-list-products-btn');\n        \n        // Remove previous click handlers to avoid duplicates\n        collapsedBtn.off('click');\n        \n        // When the collapsed button is clicked, trigger the expanded button's click handler\n        collapsedBtn.on('click', () => {\n            expandedBtn.click();\n        });\n        \n        // Initial visibility state based on selected categories\n        const hasSelectedCategories = this.filter.categoryManager.getSelectedCategories().length > 0;\n        const isFiltersExpanded = this.container.find('#filterOptions').hasClass('show');\n        \n        this.container.find('.collapsed-list-products-btn-container')\n            .toggleClass('d-none', isFiltersExpanded || !hasSelectedCategories);\n    }\n    \n    /**\n     * Update all item count displays with the current count\n     */\n    updateItemCountDisplays(count) {\n        // Update the main item count in the filter summary\n        this.container.find('.item-count').text(count);\n    \n        // Update any other count displays that might exist\n        const searchSummary = this.container.find('.search-summary .badge');\n        if (searchSummary.length) {\n            searchSummary.text(`${count} ${this.itemType}`);\n        }\n    \n        // Update the results count display\n        this.container.find('.results-count .item-count').text(count);\n        \n        // Update product count if we're in categories view\n        if (this.itemType === 'categories') {\n            this._updateProductCount();\n        }\n    }\n    \n    /**\n     * Update the product count display by fetching the count from the server\n     */\n    _updateProductCount() {\n        const selectedCategories = this.filter.categoryManager.getSelectedCategories();\n        \n        if (!selectedCategories.length) {\n            // Hide product count if no categories are selected\n            this.container.find('.selected-stats').addClass('d-none');\n            return;\n        }\n        \n        // Fetch the product count from the server\n        apiClient.get('/products/api/products/count/', {\n            category: selectedCategories.join(',')\n        }, {\n            skipGlobalErrorHandler: true\n        })\n        .then(response => {\n            if (response.product_count !== undefined) {\n                // Update the product count display\n                this.container.find('.product-count').text(response.product_count);\n                this.container.find('.selected-count').text(selectedCategories.length);\n                this.container.find('.selected-stats').removeClass('d-none');\n            }\n        })\n        .catch(error => {\n            console.warn('Error fetching product count:', error);\n            this.container.find('.selected-stats').addClass('d-none');\n        });\n    }\n    \n    /**\n     * Update the filter summary display\n     */\n    updateFilterSummary() {\n        const searchValue = this.container.find('.filter-search').val();\n        const categorySelection = this.filter.categoryManager.getSelectedCategories();\n    \n        const filterSummary = this.container.find('#filterSummary');\n        if (!filterSummary.length) return;\n    \n        // Update search summary\n        const searchSummary = filterSummary.find('.search-summary');\n        if (searchValue) {\n            searchSummary.removeClass('d-none');\n            searchSummary.find('.search-term-summary').text(searchValue);\n        } else {\n            searchSummary.addClass('d-none');\n        }\n    \n        // Update categories summary\n        const categoriesSummary = filterSummary.find('.categories-summary');\n        if (categorySelection.length > 0) {\n            categoriesSummary.removeClass('d-none');\n            categoriesSummary.find('.category-count-summary').text(categorySelection.length);\n        } else {\n            categoriesSummary.addClass('d-none');\n        }\n    \n        // Update the active filters display in expanded view\n        const activeFiltersDisplay = this.container.find('.active-filters .active-filter-display');\n        if (activeFiltersDisplay.length) {\n            const searchDisplay = activeFiltersDisplay.find('.search-display');\n            const categoriesDisplay = activeFiltersDisplay.find('.categories-display');\n        \n            if (searchValue) {\n                searchDisplay.removeClass('d-none');\n                searchDisplay.find('.search-term').text(searchValue);\n            } else {\n                searchDisplay.addClass('d-none');\n            }\n        \n            if (categorySelection.length > 0) {\n                categoriesDisplay.removeClass('d-none');\n                categoriesDisplay.find('.category-count-display').text(categorySelection.length);\n            } else {\n                categoriesDisplay.addClass('d-none');\n            }\n        }\n    \n        // Show/hide the summary\n        if (searchValue || categorySelection.length > 0) {\n            filterSummary.addClass('d-flex').removeClass('d-none');\n        } else if (!this.container.find('#filterOptions').hasClass('show')) {\n            filterSummary.removeClass('d-flex').addClass('d-none');\n        }\n        \n        // Update the List Products button visibility\n        if (this.itemType === 'categories') {\n            const isFiltersExpanded = this.container.find('#filterOptions').hasClass('show');\n            const hasSelectedCategories = categorySelection.length > 0;\n            \n            this.container.find('.collapsed-list-products-btn-container')\n                .toggleClass('d-none', isFiltersExpanded || !hasSelectedCategories);\n                \n            // Also update the product count when filter summary changes\n            if (hasSelectedCategories) {\n                this._updateProductCount();\n            } else {\n                this.container.find('.selected-stats').addClass('d-none');\n            }\n        }\n    }\n    \n    /**\n     * Clean up resources\n     */\n    destroy() {\n        const filterToggle = this.container.find('.filter-toggle');\n        \n        // Remove event handlers\n        if (filterToggle.length) {\n            filterToggle.off('click');\n        }\n        \n        this.container.find('#filterSummary .search-summary .btn-close').off('click');\n        this.container.find('#filterSummary .categories-summary .btn-close').off('click');\n        \n        // Remove List Products button event handlers\n        if (this.itemType === 'categories') {\n            this.container.find('.collapsed-list-products-btn-container .list-products-btn').off('click');\n        }\n    }\n}\n","/**\n * array-utils.js - Utility functions for array operations\n * \n * Provides common array manipulation and comparison functions\n */\n\n/**\n * Compare two arrays for equality, regardless of element order\n * @param {Array} a - First array to compare\n * @param {Array} b - Second array to compare\n * @returns {boolean} - Whether the arrays contain the same elements\n */\nexport function arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n    \n    // Normalize and sort arrays for consistent comparison\n    const normalizedA = [...a].map(item => item?.toString()).sort();\n    const normalizedB = [...b].map(item => item?.toString()).sort();\n    \n    // Use JSON.stringify for deep comparison\n    return JSON.stringify(normalizedA) === JSON.stringify(normalizedB);\n}\n\n/**\n * Check if an array contains a specific value\n * Handles type conversion for more consistent results\n * @param {Array} array - The array to check\n * @param {*} value - The value to look for\n * @returns {boolean} - Whether the value exists in the array\n */\nexport function arrayContains(array, value) {\n    if (!array || !Array.isArray(array)) return false;\n    \n    const valueStr = value?.toString();\n    return array.some(item => item?.toString() === valueStr);\n}\n\n/**\n * Safely add an item to an array without duplicates\n * @param {Array} array - The array to modify\n * @param {*} item - The item to add\n * @returns {Array} - The updated array\n */\nexport function addToArray(array, item) {\n    if (!array) array = [];\n    \n    if (!arrayContains(array, item)) {\n        array.push(item);\n    }\n    \n    return array;\n}\n\n/**\n * Remove an item from an array\n * @param {Array} array - The array to modify\n * @param {*} item - The item to remove\n * @returns {Array} - The updated array\n */\nexport function removeFromArray(array, item) {\n    if (!array || !Array.isArray(array)) return [];\n    \n    const valueStr = item?.toString();\n    return array.filter(arrItem => arrItem?.toString() !== valueStr);\n}\n\n/**\n * Toggle an item in an array (add if not present, remove if present)\n * @param {Array} array - The array to modify\n * @param {*} item - The item to toggle\n * @returns {Array} - The updated array with the item toggled\n */\nexport function toggleInArray(array, item) {\n    if (!array || !Array.isArray(array)) array = [];\n    \n    return arrayContains(array, item) \n        ? removeFromArray(array, item) \n        : addToArray(array, item);\n}\n\n/**\n * Check if an array includes a value (alias for arrayContains)\n * @param {Array} array - The array to check\n * @param {*} value - The value to find\n * @returns {boolean} True if the array includes the value\n */\nexport function includesValue(array, value) {\n    return arrayContains(array, value);\n}\n\n/**\n * Get unique values from an array\n * @param {Array} array - The array to process\n * @returns {Array} Array with duplicate values removed\n */\nexport function uniqueValues(array) {\n    if (!array || !Array.isArray(array)) return [];\n    return [...new Set(array)];\n}\n\n/**\n * Group array items by a property\n * @param {Array} array - Array of objects\n * @param {string} property - Property to group by\n * @returns {Object} Grouped items\n */\nexport function groupBy(array, property) {\n    if (!array || !Array.isArray(array)) return {};\n    \n    return array.reduce((result, item) => {\n        const key = item[property];\n        if (!result[key]) {\n            result[key] = [];\n        }\n        result[key].push(item);\n        return result;\n    }, {});\n}\n\nexport default {\n    arraysEqual,\n    arrayContains,\n    addToArray,\n    removeFromArray,\n    toggleInArray,\n    includesValue,\n    uniqueValues,\n    groupBy\n};\n","/**\n * form-utils.js - Common form-related utilities\n */\n\n/**\n * Set up a Select2 dropdown\n * @param {jQuery} element - The select element\n * @param {Object} options - Configuration options\n */\nexport function setupSelect2(element, options) {\n    if (!element.length) return;\n    \n    const config = {\n        theme: 'bootstrap-5',\n        width: '100%',\n        multiple: options.multiple || false,\n        allowClear: options.allowClear || false,\n        closeOnSelect: options.closeOnSelect || true,\n        placeholder: options.placeholder || 'Select an option',\n        minimumInputLength: options.minimumInputLength || 0,\n        minimumResultsForSearch: options.minimumResultsForSearch || 0,\n        templateResult: options.formatResult || null,\n        templateSelection: options.formatSelection || function(data) {\n            return data.text;\n        }\n    };\n    \n    // Add AJAX configuration if URL is provided\n    if (options.url) {\n        config.ajax = {\n            delay: 250,\n            url: options.url,\n            data: (params) => ({\n                search: params.term || '',\n                page: params.page || 1\n            }),\n            processResults: (data) => ({\n                results: data.categories.map(item => ({\n                    id: item.id,\n                    text: item.name,\n                    selected: false\n                })),\n                pagination: {\n                    more: data.has_more\n                }\n            }),\n            cache: true\n        };\n    }\n    \n    element.select2(config);\n}\n\n/**\n * Toggle an element's visibility with smooth transition\n * @param {jQuery} element - The element to toggle\n * @param {Object} callbacks - Optional callback functions\n */\nexport function toggleElement(element, callbacks = {}) {\n    const isExpanded = element.hasClass('show');\n    const newState = !isExpanded;\n    \n    if (newState) {\n        element.addClass('show');\n        if (callbacks.onShow) callbacks.onShow();\n    } else {\n        element.removeClass('show');\n        if (callbacks.onHide) callbacks.onHide();\n    }\n}\n\n/**\n * Set disabled state for a group of elements\n * @param {jQuery} container - Container element\n * @param {string} selector - Selector for elements to disable/enable\n * @param {boolean} disabled - Whether to disable or enable the elements\n */\nexport function setDisabledState(container, selector, disabled) {\n    container.find(selector).prop('disabled', disabled);\n}\n\n/**\n * Reset a form to its initial state\n * @param {jQuery} form - The form element\n */\nexport function resetForm(form) {\n    form[0].reset();\n    \n    // Reset Select2 dropdowns\n    form.find('select').each(function() {\n        if ($(this).hasClass('select2-hidden-accessible')) {\n            $(this).val(null).trigger('change');\n        }\n    });\n}\n","/**\n * notifications.js - Reusable notification utilities\n * \n * Provides standardized message displays using SweetAlert2\n */\nimport Swal from 'sweetalert2';\n\n/**\n * NotificationService class for handling user notifications\n */\nexport class NotificationService {\n    /**\n     * Display a success message\n     * @param {string} message - Success message to display\n     * @param {Object} options - Additional options\n     */\n    displaySuccess(message, options = {}) {\n        const defaults = {\n            icon: 'success',\n            title: message,\n            showConfirmButton: true,\n            timer: 2000,\n            timerProgressBar: true\n        };\n        \n        Swal.fire({...defaults, ...options});\n    }\n\n    /**\n     * Display an error message\n     * @param {string} message - Error message to display\n     * @param {Object} options - Additional options\n     */\n    displayError(message, options = {}) {\n        const defaults = {\n            icon: 'error',\n            title: 'Error',\n            text: message,\n            showConfirmButton: true\n        };\n        \n        Swal.fire({...defaults, ...options});\n    }\n\n    /**\n     * Display validation error in SweetAlert context\n     * @param {Object} error - Error object\n     * @param {string} defaultMessage - Default message if error details not available\n     * @returns {Promise} - Rejected promise for promise chain\n     */\n    displaySwalError(error, defaultMessage) {\n        Swal.showValidationMessage(error.responseJSON?.error || defaultMessage);\n        return Promise.reject();\n    }\n    \n    /**\n     * Display a confirmation dialog\n     * @param {Object} options - Configuration options\n     * @returns {Promise} - Promise resolving with user's choice\n     */\n    confirm(options) {\n        const defaults = {\n            icon: 'warning',\n            showCancelButton: true,\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            confirmButtonColor: '#d33',\n            cancelButtonColor: '#3085d6'\n        };\n        \n        return Swal.fire({...defaults, ...options});\n    }\n    \n    /**\n     * Display a prompt for user input\n     * @param {Object} options - Configuration options\n     * @returns {Promise} - Promise resolving with user's input\n     */\n    prompt(options) {\n        const defaults = {\n            input: 'text',\n            showCancelButton: true,\n            inputValidator: (value) => !value && 'Please enter a value.'\n        };\n        \n        return Swal.fire({...defaults, ...options});\n    }\n}\n\nexport default new NotificationService();"],"names":["apiClient","notifications","setDisabledState","CategoryFilterManager","FilterUIManager","ItemFilter","options","_classCallCheck","containerId","filterUrl","onUpdate","searchDelay","itemType","filterOnCategorySelect","undefined","container","$","concat","searchTimeout","pendingRequest","lastFilteredValue","categoryManager","uiManager","_initialize","_createClass","key","value","initialize","_initializeEventListeners","filterItems","_setupSearchEvents","_setupSortEvents","_setupResetEvents","_setupListProductsEvent","searchSelector","on","_handleSearchInput","bind","_handleClearSearch","e","_this","searchInput","currentTarget","currentValue","val","clearTimeout","setTimeout","find","_this2","_this3","clearSearchBtn","clearCategoriesBtn","length","click","_this4","selectedCategories","getSelectedCategories","window","location","href","join","addClass","attr","removeClass","animate","scrollTop","offset","top","displayWarning","_cancelPendingRequest","requestParams","_buildRequestParams","updateFilterSummary","_showLoading","focusState","_captureSearchFieldState","_makeFilterRequest","pendingRequests","includes","removePendingRequest","abort","currentInputValue","categoryParam","search","sort","items_only","category","console","log","searchField","wasSearchFocused","document","activeElement","field","wasFocused","selectionStart","selectionEnd","_this5","get","skipGlobalErrorHandler","then","response","_handleFilterSuccess","error","_handleFilterError","_processSuccessfulResponse","_finishFilterRequest","statusText","displayError","focus","setSelectionRange","itemContainer","warn","html","itemCount","_extractItemCount","updateItemCountDisplays","count","total_count","_countItemsInContainer","itemSelectors","_i","_itemSelectors","selector","show","toggleClass","preloadCategories","applySavedCategories","destroy","off","setupSelect2","removeFromArray","filterInstance","filter","_getSavedCategories","_initializeSelect2","_setupCategoryEvents","_renderCategoryTags","_updateCategoryCardStyling","_updateProductCount","selectElement","url","formatResult","_formatCategoryOption","multiple","allowClear","closeOnSelect","placeholder","_setupCheckboxHandlers","_updateDropdownCheckboxes","id","text","isSelected","toString","each","_","checkbox","$checkbox","categoryId","replace","prop","stopPropagation","currentSelection","newSelection","_toConsumableArray","is","push","trigger","map","_saveCategories","target","closest","data","_toggleCategory","forEach","tagsContainer","empty","hide","selectedOptions","Array","from","option","categoryName","tag","preventDefault","removeCategory","append","categories","normalizedCategories","localStorage","setItem","JSON","stringify","savedCategories","getItem","parse","fn","select2","toggleElement","productCountElement","_setupToggleEvents","_setupListProductsVisibility","_loadInitialItemCount","filterSummary","count_only","filterToggle","filterOptions","onShow","onHide","hasSelectedCategories","collapsedBtn","expandedBtn","isFiltersExpanded","hasClass","searchSummary","product_count","searchValue","categorySelection","categoriesSummary","activeFiltersDisplay","searchDisplay","categoriesDisplay","arraysEqual","a","b","normalizedA","item","normalizedB","arrayContains","array","isArray","valueStr","some","addToArray","arrItem","toggleInArray","includesValue","uniqueValues","Set","groupBy","property","reduce","result","element","config","theme","width","minimumInputLength","minimumResultsForSearch","templateResult","templateSelection","formatSelection","ajax","delay","params","term","page","processResults","results","name","selected","pagination","more","has_more","cache","callbacks","arguments","isExpanded","newState","disabled","resetForm","form","reset","Swal","NotificationService","displaySuccess","message","defaults","icon","title","showConfirmButton","timer","timerProgressBar","fire","_objectSpread","displaySwalError","defaultMessage","_error$responseJSON","showValidationMessage","responseJSON","Promise","reject","confirm","showCancelButton","allowOutsideClick","allowEscapeKey","confirmButtonColor","cancelButtonColor","prompt","input","inputValidator"],"sourceRoot":""}