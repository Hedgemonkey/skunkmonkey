{"version":3,"file":"static_js_api-client_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,SAASA,CAACC,IAAI,EAAE;EAC5B,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,EAAE,EAAE;IAC3C,IAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,IAAMH,MAAM,GAAGC,OAAO,CAACE,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChC,IAAIL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAET,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,KAAMP,IAAI,GAAG,GAAI,EAAE;QACvDC,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAS,CAACT,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QACnE;MACJ;IACJ;EACJ;EACA,OAAON,WAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASU,eAAeA,CAC3BC,GAAG,EACHC,MAAM,EACNC,IAAI,EACJC,eAAe,EACfC,aAAa,EAIf;EAAA,IAHEC,SAAS,GAAAC,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EAAA,IAChBE,WAAW,GAAAF,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EAAA,IAClBG,WAAW,GAAAH,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,kDAAkD;EAEhE;EACA,IAAMI,UAAU,GAAGR,IAAI,YAAYS,QAAQ;EAC3C,IAAID,UAAU,EAAE;IACZF,WAAW,GAAG,KAAK;IACnBC,WAAW,GAAG,KAAK;EACvB;;EAEA;EACA,IAAMG,WAAW,GAAG;IAChBZ,GAAG,EAAEA,GAAG;IACRC,MAAM,EAAEA,MAAM;IACdC,IAAI,EAAEA,IAAI;IACVM,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBI,OAAO,EAAE;MACL,aAAa,EAAE1B,SAAS,CAAC,WAAW,CAAC;MACrC,kBAAkB,EAAE;IACxB,CAAC;IACD2B,OAAO,EAAE,SAATA,OAAOA,CAAYC,QAAQ,EAAE;MACzB,IAAI,OAAOZ,eAAe,KAAK,UAAU,EAAE;QACvC;QACA,IAAI,OAAOY,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACnB,IAAI,CAAC,CAAC,CAACoB,UAAU,CAAC,GAAG,CAAC,EAAE;UACjE;UACAb,eAAe,CAAC;YAAEc,IAAI,EAAEF;UAAS,CAAC,CAAC;QACvC,CAAC,MAAM;UACH;UACAZ,eAAe,CAACY,QAAQ,CAAC;QAC7B;MACJ;IACJ,CAAC;IACDG,KAAK,EAAE,SAAPA,KAAKA,CAAYC,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAE;MAC7C;MACA,IAAID,UAAU,KAAK,OAAO,EAAE;QACxBE,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEE,UAAU,EAAEC,WAAW,CAAC;QAC9D,IAAI,OAAOjB,aAAa,KAAK,UAAU,EAAE;UACrCA,aAAa,CAACe,KAAK,EAAEC,UAAU,EAAEC,WAAW,CAAC;QACjD;MACJ;IACJ;EACJ,CAAC;;EAED;EACA,IAAIrB,GAAG,CAACuB,QAAQ,CAAC,OAAO,CAAC,IAAIvB,GAAG,CAACwB,QAAQ,CAAC,OAAO,CAAC,EAAE;IAChDZ,WAAW,CAACa,QAAQ,GAAG,MAAM;EACjC;;EAEA;EACA,IAAMC,WAAW,GAAGC,CAAC,CAACC,IAAI,CAAChB,WAAW,CAAC;;EAEvC;EACA,IAAIP,SAAS,EAAE;IACX,OAAOqB,WAAW;EACtB;AACJ;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AAC8D;;AAE9D;AACA;AACA;AACO,IAAMG,SAAS;EAClB;AACJ;AACA;AACA;AACA;AACA;EACI,SAAAA,UAAA,EAA0B;IAAA,IAAdC,OAAO,GAAAxB,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IAAAyB,eAAA,OAAAF,SAAA;IACpB,IAAI,CAACG,YAAY,GAAGF,OAAO,CAACE,YAAY,IAAIV,OAAO,CAACJ,KAAK;IACzD,IAAI,CAACe,OAAO,GAAGH,OAAO,CAACG,OAAO,IAAI,EAAE;IACpC,IAAI,CAACC,SAAS,GAAG/C,0DAAS,CAAC,WAAW,CAAC;IACvC,IAAI,CAACgD,eAAe,GAAG,EAAE;EAC7B;;EAEA;AACJ;AACA;AACA;AACA;EAJI,OAAAC,YAAA,CAAAP,SAAA;IAAAQ,GAAA;IAAAC,KAAA,EAKA,SAAAC,QAAQA,CAACC,QAAQ,EAAE;MACf;MACA,IAAIA,QAAQ,CAACxB,UAAU,CAAC,MAAM,CAAC,IAAIwB,QAAQ,CAACxB,UAAU,CAAC,GAAG,CAAC,EAAE;QACzD,OAAOwB,QAAQ;MACnB;;MAEA;MACA,OAAO,GAAAC,MAAA,CAAG,IAAI,CAACR,OAAO,OAAAQ,MAAA,CAAID,QAAQ,EAAGE,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;IACtE;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAL,GAAA;IAAAC,KAAA,EAOA,SAAAK,GAAGA,CAACH,QAAQ,EAA6B;MAAA,IAA3BI,MAAM,GAAAtC,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAAA,IAAEwB,OAAO,GAAAxB,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MACnC,OAAO,IAAI,CAACuC,OAAO,CAAC,KAAK,EAAEL,QAAQ,EAAEI,MAAM,EAAEd,OAAO,CAAC;IACzD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAO,GAAA;IAAAC,KAAA,EAOA,SAAAQ,IAAIA,CAACN,QAAQ,EAA2B;MAAA,IAAzBtC,IAAI,GAAAI,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAAA,IAAEwB,OAAO,GAAAxB,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAClC,OAAO,IAAI,CAACuC,OAAO,CAAC,MAAM,EAAEL,QAAQ,EAAEtC,IAAI,EAAE4B,OAAO,CAAC;IACxD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAAO,GAAA;IAAAC,KAAA,EAOA,SAAAS,OAAMA,CAACP,QAAQ,EAA2B;MAAA,IAAzBtC,IAAI,GAAAI,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAAA,IAAEwB,OAAO,GAAAxB,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MACpC,OAAO,IAAI,CAACuC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,EAAEtC,IAAI,EAAE4B,OAAO,CAAC;IAC1D;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAAO,GAAA;IAAAC,KAAA,EAQA,SAAAO,OAAOA,CAAC5C,MAAM,EAAEuC,QAAQ,EAA2B;MAAA,IAAAQ,KAAA;MAAA,IAAzB9C,IAAI,GAAAI,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAAA,IAAEwB,OAAO,GAAAxB,SAAA,CAAAX,MAAA,QAAAW,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAC7C,IAAMN,GAAG,GAAG,IAAI,CAACuC,QAAQ,CAACC,QAAQ,CAAC;MACnC,IAAMnC,SAAS,GAAGyB,OAAO,CAACzB,SAAS,KAAK,KAAK;;MAE7C;MACA,IAAMG,WAAW,GAAG,EAAEN,IAAI,YAAYS,QAAQ,CAAC;MAC/C,IAAMF,WAAW,GAAGD,WAAW,GAAG,kDAAkD,GAAG,KAAK;MAE5F,OAAO,IAAIyC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACpC,IAAI;UACA,IAAMzB,WAAW,GAAG3B,gEAAe,CAC/BC,GAAG,EACHC,MAAM,EACNC,IAAI,EACJ,UAACa,QAAQ,EAAK;YACV;YACAiC,KAAI,CAACI,oBAAoB,CAAC1B,WAAW,CAAC;YACtCwB,OAAO,CAACnC,QAAQ,CAAC;UACrB,CAAC,EACD,UAACI,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAK;YAAA,IAAAgC,mBAAA;YAChC;YACAL,KAAI,CAACI,oBAAoB,CAAC1B,WAAW,CAAC;;YAEtC;YACA,IAAMR,KAAK,GAAG;cACVoC,MAAM,EAAEnC,KAAK,CAACmC,MAAM;cACpBC,UAAU,EAAEpC,KAAK,CAACoC,UAAU;cAC5BC,YAAY,EAAErC,KAAK,CAACqC,YAAY;cAChCC,OAAO,EAAE,EAAAJ,mBAAA,GAAAlC,KAAK,CAACqC,YAAY,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBnC,KAAK,KAAIG,WAAW,IAAI;YACzD,CAAC;;YAED;YACA,IAAI2B,KAAI,CAAChB,YAAY,IAAI,CAACF,OAAO,CAAC4B,sBAAsB,EAAE;cACtDV,KAAI,CAAChB,YAAY,CAACd,KAAK,CAAC;YAC5B;YAEAiC,MAAM,CAACjC,KAAK,CAAC;UACjB,CAAC,EACDb,SAAS,EACTG,WAAW,EACXC,WACJ,CAAC;;UAED;UACA,IAAIJ,SAAS,IAAIqB,WAAW,EAAE;YAC1BsB,KAAI,CAACb,eAAe,CAACwB,IAAI,CAACjC,WAAW,CAAC;UAC1C;;UAEA;UACA,IAAII,OAAO,CAAC8B,OAAO,EAAE;YACjBC,UAAU,CAAC,YAAM;cACb,IAAInC,WAAW,IAAIA,WAAW,CAACoC,UAAU,GAAG,CAAC,EAAE;gBAC3CpC,WAAW,CAACqC,KAAK,CAAC,CAAC;gBACnBZ,MAAM,CAAC;kBACHM,OAAO,EAAE,mBAAmB;kBAC5BH,MAAM,EAAE,CAAC;kBACTC,UAAU,EAAE;gBAChB,CAAC,CAAC;cACN;YACJ,CAAC,EAAEzB,OAAO,CAAC8B,OAAO,CAAC;UACvB;QACJ,CAAC,CAAC,OAAO1C,KAAK,EAAE;UACZI,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CiC,MAAM,CAAC;YACHM,OAAO,EAAEvC,KAAK,CAACuC,OAAO,IAAI,wBAAwB;YAClDvC,KAAK,EAAEA;UACX,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;;IAEA;AACJ;AACA;AACA;EAHI;IAAAmB,GAAA;IAAAC,KAAA,EAIA,SAAAc,oBAAoBA,CAACP,OAAO,EAAE;MAC1B,IAAMmB,KAAK,GAAG,IAAI,CAAC7B,eAAe,CAAC8B,OAAO,CAACpB,OAAO,CAAC;MACnD,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAE;QACd,IAAI,CAAC7B,eAAe,CAAC+B,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACzC;IACJ;;IAEA;AACJ;AACA;EAFI;IAAA3B,GAAA;IAAAC,KAAA,EAGA,SAAA6B,QAAQA,CAAA,EAAG;MACP,IAAI,CAAChC,eAAe,CAACiC,OAAO,CAAC,UAAAvB,OAAO,EAAI;QACpC,IAAIA,OAAO,IAAI,OAAOA,OAAO,CAACkB,KAAK,KAAK,UAAU,EAAE;UAChDlB,OAAO,CAACkB,KAAK,CAAC,CAAC;QACnB;MACJ,CAAC,CAAC;MACF,IAAI,CAAC5B,eAAe,GAAG,EAAE;IAC7B;EAAC;AAAA;;AAGL;AACA,iEAAe,IAAIN,SAAS,CAAC,CAAC","sources":["webpack://skunkmonkey/./static/js/ajax_helper.js","webpack://skunkmonkey/./static/js/api-client.js"],"sourcesContent":["/**\n * ajax_helper.js - Utility functions for AJAX requests\n * \n * Provides standardized AJAX request functionality with CSRF protection\n * and consistent error handling.\n */\n\n/**\n * Get the CSRF token from cookies\n * @param {string} name - Cookie name\n * @returns {string} - CSRF token value\n */\nexport function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n/**\n * Makes an AJAX request and returns the jqXHR object to allow aborting the request if needed\n * @param {string} url - The URL to send the request to\n * @param {string} method - The HTTP method to use (GET, POST, etc.)\n * @param {Object|FormData} data - The data to send with the request\n * @param {Function} successCallback - Called when the request succeeds\n * @param {Function} errorCallback - Called when the request fails\n * @param {boolean} abortable - Whether to return the jqXHR object for aborting (default: true)\n * @param {boolean} processData - Whether to process the data (set to false for FormData)\n * @param {string|boolean} contentType - Content type header or false to let jQuery set it\n * @returns {Object} The jqXHR object if abortable is true, otherwise undefined\n */\nexport function makeAjaxRequest(\n    url, \n    method, \n    data, \n    successCallback, \n    errorCallback, \n    abortable = true,\n    processData = true,\n    contentType = 'application/x-www-form-urlencoded; charset=UTF-8'\n) {\n    // Determine if data is FormData and set appropriate options\n    const isFormData = data instanceof FormData;\n    if (isFormData) {\n        processData = false;\n        contentType = false;\n    }\n    \n    // Set up AJAX options\n    const ajaxOptions = {\n        url: url,\n        method: method,\n        data: data,\n        processData: processData,\n        contentType: contentType,\n        headers: {\n            'X-CSRFToken': getCookie('csrftoken'),\n            'X-Requested-With': 'XMLHttpRequest'\n        },\n        success: function (response) {\n            if (typeof successCallback === \"function\") {\n                // Handle both JSON and HTML responses\n                if (typeof response === 'string' && response.trim().startsWith('<')) {\n                    // If it's HTML content\n                    successCallback({ html: response });\n                } else {\n                    // If it's JSON or other data\n                    successCallback(response);\n                }\n            }\n        },\n        error: function (jqXHR, textStatus, errorThrown) {\n            // Don't log aborted requests as errors\n            if (textStatus !== 'abort') {\n                console.error(\"AJAX Request failed:\", textStatus, errorThrown);\n                if (typeof errorCallback === \"function\") {\n                    errorCallback(jqXHR, textStatus, errorThrown);\n                }\n            }\n        }\n    };\n    \n    // Try to auto-detect the response type\n    if (url.includes('/api/') || url.endsWith('.json')) {\n        ajaxOptions.dataType = 'json';\n    }\n    \n    // Make the request\n    const ajaxRequest = $.ajax(ajaxOptions);\n    \n    // Return the jqXHR object if the request should be abortable\n    if (abortable) {\n        return ajaxRequest;\n    }\n}\n","/**\n * api-client.js - Standardized API client for consistent AJAX operations\n * \n * Provides a higher-level wrapper around AJAX requests with standardized\n * error handling, response parsing, and consistent promise handling.\n */\nimport { makeAjaxRequest, getCookie } from './ajax_helper.js';\n\n/**\n * API Client for consistent handling of AJAX requests\n */\nexport class ApiClient {\n    /**\n     * Create a new ApiClient instance\n     * @param {Object} options - Configuration options\n     * @param {Function} options.errorHandler - Global error handler function\n     * @param {string} options.baseUrl - Base URL for API requests\n     */\n    constructor(options = {}) {\n        this.errorHandler = options.errorHandler || console.error;\n        this.baseUrl = options.baseUrl || '';\n        this.csrfToken = getCookie('csrftoken');\n        this.pendingRequests = [];\n    }\n\n    /**\n     * Builds a complete URL for the API request\n     * @param {string} endpoint - API endpoint\n     * @returns {string} - Complete URL\n     */\n    buildUrl(endpoint) {\n        // If endpoint is already a full URL, return it as is\n        if (endpoint.startsWith('http') || endpoint.startsWith('/')) {\n            return endpoint;\n        }\n        \n        // Otherwise, join baseUrl and endpoint\n        return `${this.baseUrl}/${endpoint}`.replace(/([^:]\\/)\\/+/g, '$1');\n    }\n\n    /**\n     * Make a GET request to fetch data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} params - Query parameters\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n    get(endpoint, params = {}, options = {}) {\n        return this.request('GET', endpoint, params, options);\n    }\n\n    /**\n     * Make a POST request to create or update data\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n    post(endpoint, data = {}, options = {}) {\n        return this.request('POST', endpoint, data, options);\n    }\n\n    /**\n     * Make a DELETE request to remove data\n     * @param {string} endpoint - API endpoint\n     * @param {Object} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n    delete(endpoint, data = {}, options = {}) {\n        return this.request('DELETE', endpoint, data, options);\n    }\n\n    /**\n     * Make a generic request with specified method\n     * @param {string} method - HTTP method\n     * @param {string} endpoint - API endpoint\n     * @param {Object|FormData} data - Data to send\n     * @param {Object} options - Additional options\n     * @returns {Promise} - Promise resolving with response\n     */\n    request(method, endpoint, data = {}, options = {}) {\n        const url = this.buildUrl(endpoint);\n        const abortable = options.abortable !== false;\n        \n        // Determine if we should process the data (false for FormData)\n        const processData = !(data instanceof FormData);\n        const contentType = processData ? 'application/x-www-form-urlencoded; charset=UTF-8' : false;\n        \n        return new Promise((resolve, reject) => {\n            try {\n                const ajaxRequest = makeAjaxRequest(\n                    url,\n                    method,\n                    data,\n                    (response) => {\n                        // Remove from pending requests\n                        this.removePendingRequest(ajaxRequest);\n                        resolve(response);\n                    },\n                    (jqXHR, textStatus, errorThrown) => {\n                        // Remove from pending requests\n                        this.removePendingRequest(ajaxRequest);\n                        \n                        // Create standardized error object\n                        const error = {\n                            status: jqXHR.status,\n                            statusText: jqXHR.statusText,\n                            responseJSON: jqXHR.responseJSON,\n                            message: jqXHR.responseJSON?.error || errorThrown || \"Request failed\"\n                        };\n                        \n                        // Call the global error handler if provided\n                        if (this.errorHandler && !options.skipGlobalErrorHandler) {\n                            this.errorHandler(error);\n                        }\n                        \n                        reject(error);\n                    },\n                    abortable,\n                    processData,\n                    contentType\n                );\n                \n                // Track the request if abortable\n                if (abortable && ajaxRequest) {\n                    this.pendingRequests.push(ajaxRequest);\n                }\n                \n                // If there's a timeout option, handle it\n                if (options.timeout) {\n                    setTimeout(() => {\n                        if (ajaxRequest && ajaxRequest.readyState < 4) {\n                            ajaxRequest.abort();\n                            reject({\n                                message: 'Request timed out',\n                                status: 0,\n                                statusText: 'timeout'\n                            });\n                        }\n                    }, options.timeout);\n                }\n            } catch (error) {\n                console.error(\"Error making request:\", error);\n                reject({\n                    message: error.message || \"Failed to make request\",\n                    error: error\n                });\n            }\n        });\n    }\n\n    /**\n     * Remove a request from the pending requests list\n     * @param {Object} request - The request to remove\n     */\n    removePendingRequest(request) {\n        const index = this.pendingRequests.indexOf(request);\n        if (index !== -1) {\n            this.pendingRequests.splice(index, 1);\n        }\n    }\n\n    /**\n     * Abort all pending requests\n     */\n    abortAll() {\n        this.pendingRequests.forEach(request => {\n            if (request && typeof request.abort === 'function') {\n                request.abort();\n            }\n        });\n        this.pendingRequests = [];\n    }\n}\n\n// Create a default instance\nexport default new ApiClient();\n"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","makeAjaxRequest","url","method","data","successCallback","errorCallback","abortable","arguments","undefined","processData","contentType","isFormData","FormData","ajaxOptions","headers","success","response","startsWith","html","error","jqXHR","textStatus","errorThrown","console","includes","endsWith","dataType","ajaxRequest","$","ajax","ApiClient","options","_classCallCheck","errorHandler","baseUrl","csrfToken","pendingRequests","_createClass","key","value","buildUrl","endpoint","concat","replace","get","params","request","post","delete","_this","Promise","resolve","reject","removePendingRequest","_jqXHR$responseJSON","status","statusText","responseJSON","message","skipGlobalErrorHandler","push","timeout","setTimeout","readyState","abort","index","indexOf","splice","abortAll","forEach"],"sourceRoot":""}