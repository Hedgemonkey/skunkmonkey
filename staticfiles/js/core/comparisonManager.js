/* empty css                       */class i{constructor(){this.initialize()}initialize(){try{this.bindEvents(),this.updateComparisonCount()}catch(e){console.error("Error initializing Comparison Manager:",e)}}bindEvents(){document.addEventListener("click",e=>{const o=e.target.closest(".add-to-comparison-btn");o&&(e.preventDefault(),this.handleAddToComparison(o))}),document.addEventListener("click",e=>{const o=e.target.closest(".remove-from-comparison");o&&(e.preventDefault(),this.handleRemoveFromComparison(o))})}handleAddToComparison(e){e.dataset.productId;const o=e.dataset.productName||"Product",t=e.href,s=e.classList.contains("btn-success");this.updateButtonState(e,!s),apiClient.get(t).then(r=>{r.success?(s?this.showToast("Removed from Comparison",r.message||`${o} removed from comparison list.`,"info"):this.showToast("Added to Comparison",r.message||`${o} added to comparison list.`,"success"),this.updateComparisonCount(r.comparison_count)):(this.updateButtonState(e,s),this.showToast("Notice",r.message||"Failed to update comparison list","warning"))}).catch(r=>{this.updateButtonState(e,s),console.error("Error updating comparison:",r),this.showToast("Error","Failed to update comparison list","error")})}updateButtonState(e,o){if(o){e.classList.remove("btn-outline-secondary"),e.classList.add("btn-success"),e.innerHTML='<i class="fas fa-check me-1"></i> Compared',e.setAttribute("title","Remove from comparison");const t=e.getAttribute("href").replace("add_to_comparison","remove_from_comparison");e.setAttribute("href",t)}else{e.classList.remove("btn-success"),e.classList.add("btn-outline-secondary"),e.innerHTML='<i class="fas fa-balance-scale me-1"></i> Compare',e.setAttribute("title","Add to comparison");const t=e.getAttribute("href").replace("remove_from_comparison","add_to_comparison");e.setAttribute("href",t)}}handleRemoveFromComparison(e){const o=e.href,t=e.dataset.productName||"Product";apiClient.get(o).then(s=>{s.success?window.location.pathname.includes("/comparison/")?window.location.reload():(this.updateComparisonCount(s.comparison_count),this.showToast("Removed from Comparison",s.message||`${t} removed from comparison list.`,"info")):this.showToast("Error",s.message||"Failed to remove product","error")}).catch(s=>{console.error("Error removing from comparison:",s),this.showToast("Error","Failed to remove product from comparison","error")})}updateComparisonCount(e){const o=document.querySelectorAll(".comparison-count");o.length>0&&e!==void 0&&o.forEach(t=>{t.textContent=e})}showToast(e,o,t="info"){const s=t==="danger"?"error":t;typeof window.Swal<"u"?(console.log("Showing toast with SweetAlert2:",e,o,s),window.Swal.fire({title:e,text:o,icon:s,toast:!0,position:"top-end",showConfirmButton:!1,timer:3e3,timerProgressBar:!0,didOpen:r=>{r.addEventListener("mouseenter",window.Swal.stopTimer),r.addEventListener("mouseleave",window.Swal.resumeTimer)}})):(console.warn("SweetAlert2 not available for toast:",e,o),alert(`${e}: ${o}`))}}document.addEventListener("DOMContentLoaded",()=>{typeof window.Swal>"u"?console.warn("SweetAlert2 is not available. Toast notifications will fall back to alerts."):console.log("SweetAlert2 is available for ComparisonManager."),window.comparisonManager=new i});
